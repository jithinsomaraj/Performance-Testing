<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.6.3">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="IZ-Performance Test">
      <boolProp name="TestPlan.tearDown_on_shutdown">true</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
    </TestPlan>
    <hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Customer Application" enabled="false">
        <intProp name="ThreadGroup.num_threads">10</intProp>
        <intProp name="ThreadGroup.ramp_time">60</intProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller">
          <stringProp name="LoopController.loops">1</stringProp>
          <boolProp name="LoopController.continue_forever">false</boolProp>
        </elementProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/v1/admin/ticket/ticket-management-1" enabled="false">
          <stringProp name="HTTPSampler.domain">bff-admin.interview-zero-stg.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">/v1/admin/ticket/ticket-management</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;cId&quot;:&quot;${cid}&quot;,&quot;noOfTickets&quot;:99,&quot;expiryDate&quot;:&quot;2026-09-30&quot;,&quot;message&quot;:&quot;This is for performance test&quot;,&quot;method&quot;:1,&quot;adminId&quot;:&quot;4f4af08a7d57452283048d4a126828b4&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="sec-fetch-mode" elementType="Header">
                <stringProp name="Header.name">sec-fetch-mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="referer" elementType="Header">
                <stringProp name="Header.name">referer</stringProp>
                <stringProp name="Header.value">https://admin.interview-zero-stg.com/</stringProp>
              </elementProp>
              <elementProp name="sec-fetch-site" elementType="Header">
                <stringProp name="Header.name">sec-fetch-site</stringProp>
                <stringProp name="Header.value">same-site</stringProp>
              </elementProp>
              <elementProp name="accept-language" elementType="Header">
                <stringProp name="Header.name">accept-language</stringProp>
                <stringProp name="Header.value">ja</stringProp>
              </elementProp>
              <elementProp name="tz" elementType="Header">
                <stringProp name="Header.name">tz</stringProp>
                <stringProp name="Header.value">Asia/Calcutta</stringProp>
              </elementProp>
              <elementProp name="Postman-Token" elementType="Header">
                <stringProp name="Header.name">Postman-Token</stringProp>
                <stringProp name="Header.value">c8dfaa9f-183d-4d84-a560-7d8cb994c338</stringProp>
              </elementProp>
              <elementProp name="origin" elementType="Header">
                <stringProp name="Header.name">origin</stringProp>
                <stringProp name="Header.value">https://admin.interview-zero-stg.com</stringProp>
              </elementProp>
              <elementProp name="priority" elementType="Header">
                <stringProp name="Header.name">priority</stringProp>
                <stringProp name="Header.value">u=1, i</stringProp>
              </elementProp>
              <elementProp name="accept" elementType="Header">
                <stringProp name="Header.name">accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="authorization" elementType="Header">
                <stringProp name="Header.name">authorization</stringProp>
                <stringProp name="Header.value">Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI0ZjRhZjA4YTdkNTc0NTIyODMwNDhkNGExMjY4MjhiNCIsImVtYWlsIjoidG9yaWlAZ21haWwuY29tIiwiZmlyc3ROYW1lIjoiVG9yaWkiLCJsYXN0TmFtZSI6IiIsImV4cCI6MTcyNTAwMDM3OSwiaWF0IjoxNzI0OTkzMTc5fQ.XEtJo00mSW1jp-YD4v44sQtynlUP--IskLBVzofO-I4</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua</stringProp>
                <stringProp name="Header.value">&quot;Chromium&quot;;v=&quot;128&quot;, &quot;Not;A=Brand&quot;;v=&quot;24&quot;, &quot;Google Chrome&quot;;v=&quot;128&quot;</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-mobile" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                <stringProp name="Header.value">?0</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-platform" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
              </elementProp>
              <elementProp name="content-type" elementType="Header">
                <stringProp name="Header.name">content-type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="user-agent" elementType="Header">
                <stringProp name="Header.name">user-agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/128.0.0.0 Safari/537.36</stringProp>
              </elementProp>
              <elementProp name="sec-fetch-dest" elementType="Header">
                <stringProp name="Header.name">sec-fetch-dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
            <stringProp name="filename">C:/Users/Jithin Somaraj/Desktop/apache-jmeter-5.5/bin/cid.csv</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="variableNames">cid</stringProp>
            <boolProp name="ignoreFirstLine">true</boolProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
          </CSVDataSet>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/v1/customers/login-226" enabled="false">
          <stringProp name="HTTPSampler.domain">bff-customer.interview-zero-stg.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/v1/customers/login</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;username&quot;:&quot;${userId}&quot;,&quot;password&quot;:&quot;password&quot;,&quot;isSessionExist&quot;:true}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">https://customer.interview-zero-stg.com/</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-site</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">ja</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">https://customer.interview-zero-stg.com</stringProp>
              </elementProp>
              <elementProp name="Priority" elementType="Header">
                <stringProp name="Header.name">Priority</stringProp>
                <stringProp name="Header.value">u=0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:129.0) Gecko/20100101 Firefox/129.0</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
            <stringProp name="filename">client_info.csv</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="variableNames">userId</stringProp>
            <boolProp name="ignoreFirstLine">true</boolProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
          </CSVDataSet>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">authToken</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..accessToken</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">0</stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">token = vars.get(&quot;authToken&quot;);
userID = vars.get(&quot;userId&quot;);
f = new FileOutputStream(&quot;IZ_CustomerToken.csv&quot;, true); //specify true if you want to overwrite file. Keep blank otherwise.
p = new PrintStream(f); 
this.interpreter.setOut(p); 
print(token +&quot;,&quot; + userID);
f.close();</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/v1/customers/policy-agreement-230" enabled="false">
          <stringProp name="HTTPSampler.domain">bff-customer.interview-zero-stg.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/v1/customers/policy-agreement</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;isUserServiceAgreementAccepted&quot;:true,&quot;isUserConfidentialityAgreementAccepted&quot;:true}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">https://customer.interview-zero-stg.com/</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-site</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">ja</stringProp>
              </elementProp>
              <elementProp name="tz" elementType="Header">
                <stringProp name="Header.name">tz</stringProp>
                <stringProp name="Header.value">Asia/Kolkata</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">https://customer.interview-zero-stg.com</stringProp>
              </elementProp>
              <elementProp name="Priority" elementType="Header">
                <stringProp name="Header.name">Priority</stringProp>
                <stringProp name="Header.value">u=0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${token}</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:129.0) Gecko/20100101 Firefox/129.0</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config">
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="filename">F:/apache-jmeter-5.6.3/apache-jmeter-5.6.3/bin/IZ_CustomerToken.csv</stringProp>
            <boolProp name="ignoreFirstLine">true</boolProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="variableNames">token</stringProp>
          </CSVDataSet>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/v1/customers/industries-340" enabled="false">
          <stringProp name="HTTPSampler.domain">bff-customer.interview-zero-stg.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/v1/customers/industries</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="filename">F:/apache-jmeter-5.6.3/apache-jmeter-5.6.3/bin/IZ_CustomerToken.csv</stringProp>
            <boolProp name="ignoreFirstLine">true</boolProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="variableNames">token</stringProp>
          </CSVDataSet>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">https://customer.interview-zero-stg.com/</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-site</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">ja</stringProp>
              </elementProp>
              <elementProp name="tz" elementType="Header">
                <stringProp name="Header.name">tz</stringProp>
                <stringProp name="Header.value">Asia/Kolkata</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">https://customer.interview-zero-stg.com</stringProp>
              </elementProp>
              <elementProp name="Priority" elementType="Header">
                <stringProp name="Header.name">Priority</stringProp>
                <stringProp name="Header.value">u=0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${token}</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:129.0) Gecko/20100101 Firefox/129.0</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/v1/customers/prefectures-338" enabled="false">
          <stringProp name="HTTPSampler.domain">bff-customer.interview-zero-stg.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/v1/customers/prefectures</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">https://customer.interview-zero-stg.com/</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-site</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">ja</stringProp>
              </elementProp>
              <elementProp name="tz" elementType="Header">
                <stringProp name="Header.name">tz</stringProp>
                <stringProp name="Header.value">Asia/Kolkata</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">https://customer.interview-zero-stg.com</stringProp>
              </elementProp>
              <elementProp name="Priority" elementType="Header">
                <stringProp name="Header.name">Priority</stringProp>
                <stringProp name="Header.value">u=0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${token}</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:129.0) Gecko/20100101 Firefox/129.0</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="filename">F:/apache-jmeter-5.6.3/apache-jmeter-5.6.3/bin/IZ_CustomerToken.csv</stringProp>
            <boolProp name="ignoreFirstLine">true</boolProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="variableNames">token</stringProp>
          </CSVDataSet>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/v1/customers/occupations-439" enabled="false">
          <stringProp name="HTTPSampler.domain">bff-customer.interview-zero-stg.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/v1/customers/occupations</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="filename">F:/apache-jmeter-5.6.3/apache-jmeter-5.6.3/bin/IZ_CustomerToken.csv</stringProp>
            <boolProp name="ignoreFirstLine">true</boolProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="variableNames">token</stringProp>
          </CSVDataSet>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">https://customer.interview-zero-stg.com/</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-site</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">ja</stringProp>
              </elementProp>
              <elementProp name="tz" elementType="Header">
                <stringProp name="Header.name">tz</stringProp>
                <stringProp name="Header.value">Asia/Kolkata</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">https://customer.interview-zero-stg.com</stringProp>
              </elementProp>
              <elementProp name="Priority" elementType="Header">
                <stringProp name="Header.name">Priority</stringProp>
                <stringProp name="Header.value">u=0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${token}</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:129.0) Gecko/20100101 Firefox/129.0</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/v1/customers/researches-188" enabled="false">
          <stringProp name="HTTPSampler.domain">bff-customer.interview-zero-stg.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/v1/customers/researches</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;title&quot;:&quot;This is a performance test&quot;,&quot;includeCondition&quot;:&quot;This is a performance test&quot;,&quot;excludeCondition&quot;:&quot;This is a performance test&quot;,&quot;ngIndustries&quot;:[&quot;7bd53f41d1fa4565b82f16cfb67c33de&quot;,&quot;43918588494046f4a6fb7800ea67686e&quot;,&quot;a0ce515823f341f4aa27cdfd041320ad&quot;,&quot;244c80b1603147c4b493a51b625634d0&quot;,&quot;5379d74e4dda4be0a42fb1bd55af458a&quot;,&quot;64fdcf83975c415a8d9276c37b3f1c65&quot;,&quot;614bd27393234f1182b33d62948af959&quot;,&quot;91afcd3cd7234cd193c8325f4122eba2&quot;,&quot;b90c5cadcbfa44aa807a9a6d3f3ff7a2&quot;,&quot;ff983657ce9a4151b7f5b12fa92437d9&quot;,&quot;2484b11e8ad8473a8ff1d6232b85eb3e&quot;,&quot;5260cb2b7ce54587a844b857e3229fbc&quot;,&quot;bd1238c8702f486caa0ae0769321d98b&quot;,&quot;edfcea2425394ebaad269abbe0004ec7&quot;,&quot;fa440dce6e4a440b9c0d961935523940&quot;,&quot;35ab98925f5a4e179e8b0119e7c753aa&quot;,&quot;4aeaa60f1ca4448ca7ecdfa6138e7d8f&quot;,&quot;19c9abe623164baa96a119839468bdb2&quot;,&quot;9992d6d174cf487b94cba595cb2495a7&quot;,&quot;455d0423faad4bbb8b061f920fa1dfcd&quot;,&quot;5964cab1c8b844b7a5611974ef68c71e&quot;,&quot;4a2f8d953260411eb736f829e21c666c&quot;,&quot;16b7a9bf6023475e9b42a6409d5f0b6b&quot;,&quot;6e5f955db4d1401a944139aa42547844&quot;,&quot;255b6d54d9ed431f9884452d1761d08d&quot;,&quot;f3d0efda6e6249028358e8e36d765d7f&quot;,&quot;77328fb2781b475ca1072c57f6a13c0a&quot;,&quot;c082edf297f741fba5e24776e89144ff&quot;,&quot;1b20a486a7f64b23a63eb399a2c66240&quot;,&quot;6d0526398a434da788152664a60ac4df&quot;,&quot;70f147c538714551ba5590fd3f19fe8e&quot;,&quot;b54f826dc05d4aa090f5f7398d06177a&quot;,&quot;3aecd8bbf1044f3db04ed8172a117038&quot;,&quot;2d2af804ff8c46599916b2d8739ecba7&quot;,&quot;11d1e467b3ac48c9a764f7197274b703&quot;,&quot;a02ee5ff36244e71aa995403852d3dbd&quot;,&quot;db8dea1d0dfe4a19ad1d27d047d7909f&quot;,&quot;e81293a795d8437dbcfea4ee015d0589&quot;,&quot;46d3dc700e004428b577be1280e06915&quot;],&quot;monitorsCount&quot;:11,&quot;interviewDurationId&quot;:&quot;5119c77693364602a572a5cccfefc6db&quot;,&quot;startsAt&quot;:&quot;30-09-2024&quot;,&quot;endsAt&quot;:&quot;27-10-2024&quot;,&quot;timeslot&quot;:[{{&quot;startTime&quot;:&quot;2024-09-15T08:30:00.000Z&quot;,&quot;endTime&quot;:&quot;2024-09-15T10:30:00.000Z&quot;},{&quot;startTime&quot;:&quot;2024-09-15T10:30:00.000Z&quot;,&quot;endTime&quot;:&quot;2024-09-15T12:30:00.000Z&quot;}],&quot;hasScreening&quot;:true,&quot;gender&quot;:2,&quot;ageFrom&quot;:31,&quot;ageTo&quot;:31,&quot;prefectures&quot;:[&quot;c1afdf1fea1b486180a36bab07361bd8&quot;,&quot;08b159da2cb5484c831f2d2a7dea66b6&quot;,&quot;b452261f166f4fe9b3f9f3d40bfe921a&quot;,&quot;3c3524a79971425abdc2a29312b2b408&quot;,&quot;da8559c2ee0e418da635073c98d14161&quot;,&quot;a3c88d8127004996a13fd2ae7a247342&quot;,&quot;1d5e561a26e647c0b12a3995667fc50f&quot;,&quot;c183df619c454d67af078ee1bb560625&quot;,&quot;0d1051a49d8747ba85fd35856f58e86d&quot;,&quot;b88d03651a714299829cc91f8756a640&quot;,&quot;08a86adcc9e7480daefc4c257eccab80&quot;,&quot;d0f47df312014450aadea3b8628d684d&quot;,&quot;2ffb017347ae41729a76bf3874c3fa77&quot;,&quot;8c8cff0e5dbb4a57a88775bcb58502c6&quot;,&quot;75aecc6f525c43f68c1a61e845252b85&quot;,&quot;e5c2ee35874c402b8acff5aa76228322&quot;,&quot;71fc33e2400c4e6ebed59e75af46ceae&quot;,&quot;c16cde667b1949f384f4ccddc0483266&quot;,&quot;ec5e77f5c55544e19f5d1432b6d38100&quot;,&quot;56e105838d924ceca4e7d6fd29e7f8a0&quot;,&quot;74899f4661154f8c8cc238618f8f0e39&quot;,&quot;43fc2032ae814e5694506755843d3493&quot;,&quot;52517035f5a04003b5707882513a57dc&quot;,&quot;7aabc0fbdc744394939297df4c2001c4&quot;,&quot;ef279ca621da4c58b6dfe50eb3555463&quot;,&quot;74d926021baf4ddea78095e826588c7c&quot;,&quot;9c3f78cd7b6241289992374bec88269e&quot;,&quot;a6d25670705647e184a48eba53a9e204&quot;,&quot;e922c2c7401a43ee98b05b454721ac91&quot;,&quot;55aed9daac0441a9b0b574f166d9485d&quot;,&quot;efb0a0fd308e4f1ea33cce909bd8cfc3&quot;,&quot;02737be353004256a3595cc4696d8535&quot;,&quot;991458c42ff1482aad89b139452358dd&quot;,&quot;726d164de806418f8f3a88dea699827d&quot;,&quot;244d34a2fc4846cca02cf397458bbfc2&quot;,&quot;58e2ca7ef7374b3bb28ac30b41972fca&quot;,&quot;1485e02513554025b04b5a885b9f3d3f&quot;,&quot;65271b9a7a864a85886e79746482f310&quot;,&quot;879c7ec8a51a4877bd07a35ed6fa6622&quot;,&quot;eede37c78d50467ebd46a6dfe2bcf6eb&quot;,&quot;f0c8fc099a624771b1c0aec5bed529b0&quot;,&quot;ed570e7e37a041e0a096cb0e71e52d04&quot;,&quot;2331af4f22be4907b07bf781af982902&quot;,&quot;81ac3f94c9574eca93f248cdb232cd05&quot;,&quot;e6fe6868a2f0436496d0a51088dfbcf6&quot;,&quot;6d37e194d93f4d30b9c6c4e33cc68b5c&quot;,&quot;dcfbd15bb57a458a87f0c0bdabfe864c&quot;],&quot;maritalStatus&quot;:3,&quot;hasChildren&quot;:3,&quot;occupations&quot;:[&quot;3109e00337b84f5fb432a37f7fab2eb4&quot;,&quot;9ff0821a3d0849fbb2d404a61990189c&quot;,&quot;0faf2e6491494f62bed7546f6cac77e9&quot;,&quot;5119c77693364602a572a5cccfefc6db&quot;,&quot;77360ab5e9ad4144a42e5b3b6ee4f4db&quot;,&quot;36d2130459da49288871f0440e014bfa&quot;,&quot;cd450ead34f144ee84730234c7d9a6a7&quot;,&quot;850bac00d7334d97b65c7dc7f60552c8&quot;,&quot;03609be89d134e0bb61e709aa4361bed&quot;,&quot;cb44defa19b645a5afa0d542934c6df6&quot;,&quot;5d4e62a3ea9642b78c1ad2064bf8fe58&quot;,&quot;7bb2e89793d6414da37ccf5d48f7e534&quot;],&quot;personalIncomeStart&quot;:400,&quot;personalIncomeEnd&quot;:600,&quot;householdIncomeStart&quot;:600,&quot;householdIncomeEnd&quot;:800,&quot;screening&quot;:{&quot;order&quot;:1,&quot;question&quot;:[{&quot;questionText&quot;:&quot;This is a performance test&quot;,&quot;type&quot;:2,&quot;isRequired&quot;:&quot;1&quot;,&quot;order&quot;:1,&quot;sequence&quot;:1,&quot;options&quot;:[{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:1,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:2,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:3,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:4,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:5,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:6,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:7,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:8,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:9,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:10,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:11,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:12,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:13,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:14,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:15,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:16,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:17,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:18,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:19,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:20,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:21,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:22,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:23,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:24,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:25,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:26,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:27,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:28,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:29,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:30,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:31,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:32,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:33,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:34,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:35,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:36,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:37,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:38,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:39,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:40,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:41,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:42,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:43,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:44,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:45,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:46,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:47,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:48,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;その他&quot;,&quot;order&quot;:49,&quot;optionType&quot;:3},{&quot;optionText&quot;:&quot;当てはまるものはない&quot;,&quot;order&quot;:50,&quot;optionType&quot;:2}],&quot;isEditMode&quot;:true},{&quot;questionText&quot;:&quot;This is a performance test&quot;,&quot;type&quot;:1,&quot;isRequired&quot;:&quot;1&quot;,&quot;order&quot;:1,&quot;sequence&quot;:2,&quot;options&quot;:[{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:1,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:2,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:3,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:4,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:5,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:6,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:7,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:8,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:9,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:10,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:11,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:12,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:13,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:14,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:15,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:16,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:17,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:18,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:19,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:20,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:21,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:22,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:23,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:24,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:25,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:26,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:27,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:28,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:29,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:30,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:31,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:32,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:33,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:34,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:35,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:36,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:37,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:38,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:39,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:40,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:41,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:42,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:43,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:44,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:45,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:46,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:47,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:48,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;その他&quot;,&quot;order&quot;:49,&quot;optionType&quot;:3},{&quot;optionText&quot;:&quot;当てはまるものはない&quot;,&quot;order&quot;:50,&quot;optionType&quot;:2}],&quot;isEditMode&quot;:true},{&quot;questionText&quot;:&quot;This is a performance test\nThis is a performance test\nThis is a performance test\nThis is a performance test\nThis is a performance test&quot;,&quot;type&quot;:3,&quot;isRequired&quot;:&quot;1&quot;,&quot;order&quot;:1,&quot;sequence&quot;:3,&quot;options&quot;:[],&quot;isEditMode&quot;:true},{&quot;questionText&quot;:&quot;This is a performance test&quot;,&quot;type&quot;:2,&quot;isRequired&quot;:&quot;1&quot;,&quot;order&quot;:1,&quot;sequence&quot;:4,&quot;options&quot;:[{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:1,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:2,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:3,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:4,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:5,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:6,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:7,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:8,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:9,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:10,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:11,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:12,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:13,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:14,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:15,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:16,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:17,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:18,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:19,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:20,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:21,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:22,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:23,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:24,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:25,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:26,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:27,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:28,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:29,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:30,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:31,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:32,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:33,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:34,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:35,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:36,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:37,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:38,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:39,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:40,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:41,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:42,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:43,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:44,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:45,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:46,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:47,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:48,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;その他&quot;,&quot;order&quot;:49,&quot;optionType&quot;:3},{&quot;optionText&quot;:&quot;当てはまるものはない&quot;,&quot;order&quot;:50,&quot;optionType&quot;:2}],&quot;isEditMode&quot;:true},{&quot;questionText&quot;:&quot;This is a performance test&quot;,&quot;type&quot;:1,&quot;isRequired&quot;:&quot;1&quot;,&quot;order&quot;:1,&quot;sequence&quot;:5,&quot;options&quot;:[{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:1,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:2,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:3,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:4,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:5,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:6,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:7,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:8,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:9,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:10,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:11,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:12,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:13,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:14,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:15,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:16,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:17,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:18,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:19,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:20,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:21,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:22,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:23,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:24,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:25,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:26,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:27,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:28,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:29,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:30,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:31,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:32,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:33,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:34,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:35,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:36,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:37,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:38,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:39,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:40,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:41,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:42,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:43,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:44,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:45,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:46,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:47,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:48,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;その他&quot;,&quot;order&quot;:49,&quot;optionType&quot;:3},{&quot;optionText&quot;:&quot;当てはまるものはない&quot;,&quot;order&quot;:50,&quot;optionType&quot;:2}],&quot;isEditMode&quot;:true},{&quot;questionText&quot;:&quot;This is a performance test&quot;,&quot;type&quot;:1,&quot;isRequired&quot;:&quot;1&quot;,&quot;order&quot;:1,&quot;sequence&quot;:6,&quot;options&quot;:[{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:1,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:2,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:3,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:4,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:5,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:6,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:7,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:8,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:9,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:10,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:11,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:12,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:13,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:14,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:15,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:16,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:17,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:18,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:19,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:20,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:21,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:22,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:23,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:24,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:25,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:26,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:27,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:28,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:29,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:30,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:31,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:32,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:33,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:34,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:35,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:36,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:37,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:38,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:39,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:40,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:41,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:42,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:43,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:44,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:45,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:46,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:47,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:48,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;その他&quot;,&quot;order&quot;:49,&quot;optionType&quot;:3},{&quot;optionText&quot;:&quot;当てはまるものはない&quot;,&quot;order&quot;:50,&quot;optionType&quot;:2}],&quot;isEditMode&quot;:true},{&quot;questionText&quot;:&quot;This is a performance test&quot;,&quot;type&quot;:1,&quot;isRequired&quot;:&quot;1&quot;,&quot;order&quot;:1,&quot;sequence&quot;:7,&quot;options&quot;:[{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:1,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:2,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:3,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:4,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:5,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:6,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:7,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:8,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:9,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:10,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:11,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:12,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:13,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:14,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:15,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:16,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:17,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:18,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:19,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:20,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:21,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:22,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:23,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:24,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:25,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:26,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:27,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:28,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:29,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:30,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:31,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:32,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:33,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:34,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:35,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:36,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:37,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:38,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:39,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:40,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:41,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:42,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:43,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:44,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:45,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:46,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:47,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:48,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;その他&quot;,&quot;order&quot;:49,&quot;optionType&quot;:3},{&quot;optionText&quot;:&quot;当てはまるものはない&quot;,&quot;order&quot;:50,&quot;optionType&quot;:2}],&quot;isEditMode&quot;:true},{&quot;questionText&quot;:&quot;This is a performance test&quot;,&quot;type&quot;:2,&quot;isRequired&quot;:&quot;1&quot;,&quot;order&quot;:1,&quot;sequence&quot;:8,&quot;options&quot;:[{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:1,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:2,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:3,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:4,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:5,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:6,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:7,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:8,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:9,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:10,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:11,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:12,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:13,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:14,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:15,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:16,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:17,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:18,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:19,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:20,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:21,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:22,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:23,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:24,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:25,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:26,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:27,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:28,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:29,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:30,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:31,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:32,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:33,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:34,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:35,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:36,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:37,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:38,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:39,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:40,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:41,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:42,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:43,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:44,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:45,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:46,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:47,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:48,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;その他&quot;,&quot;order&quot;:49,&quot;optionType&quot;:3},{&quot;optionText&quot;:&quot;当てはまるものはない&quot;,&quot;order&quot;:50,&quot;optionType&quot;:2}],&quot;isEditMode&quot;:true},{&quot;questionText&quot;:&quot;This is a performance test&quot;,&quot;type&quot;:2,&quot;isRequired&quot;:&quot;1&quot;,&quot;order&quot;:1,&quot;sequence&quot;:9,&quot;options&quot;:[{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:1,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:2,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:3,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:4,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:5,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:6,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:7,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:8,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:9,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:10,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:11,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:12,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:13,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:14,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:15,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:16,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:17,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:18,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:19,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:20,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:21,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:22,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:23,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:24,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:25,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:26,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:27,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:28,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:29,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:30,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:31,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:32,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:33,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:34,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:35,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:36,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:37,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:38,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:39,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:40,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:41,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:42,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:43,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:44,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:45,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:46,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:47,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:48,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;その他&quot;,&quot;order&quot;:49,&quot;optionType&quot;:3},{&quot;optionText&quot;:&quot;当てはまるものはない&quot;,&quot;order&quot;:50,&quot;optionType&quot;:2}],&quot;isEditMode&quot;:true},{&quot;questionText&quot;:&quot;This is a performance test&quot;,&quot;type&quot;:2,&quot;isRequired&quot;:&quot;1&quot;,&quot;order&quot;:1,&quot;sequence&quot;:10,&quot;options&quot;:[{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:1,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:2,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:3,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:4,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:5,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:6,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:7,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:8,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:9,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:10,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:11,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:12,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:13,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:14,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:15,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:16,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:17,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:18,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:19,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:20,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:21,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:22,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:23,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:24,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:25,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:26,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:27,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:28,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:29,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:30,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:31,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:32,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:33,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:34,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:35,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:36,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:37,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:38,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:39,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:40,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:41,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:42,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:43,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:44,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:45,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:46,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:47,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:48,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;その他&quot;,&quot;order&quot;:49,&quot;optionType&quot;:3},{&quot;optionText&quot;:&quot;当てはまるものはない&quot;,&quot;order&quot;:50,&quot;optionType&quot;:2}],&quot;isEditMode&quot;:true}]},&quot;status&quot;:1}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="filename">IZ_CustomerToken.csv</stringProp>
            <boolProp name="ignoreFirstLine">true</boolProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="variableNames">token</stringProp>
          </CSVDataSet>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">https://customer.interview-zero-stg.com/</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-site</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">ja</stringProp>
              </elementProp>
              <elementProp name="tz" elementType="Header">
                <stringProp name="Header.name">tz</stringProp>
                <stringProp name="Header.value">Asia/Kolkata</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">https://customer.interview-zero-stg.com</stringProp>
              </elementProp>
              <elementProp name="Priority" elementType="Header">
                <stringProp name="Header.name">Priority</stringProp>
                <stringProp name="Header.value">u=0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${token}</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:129.0) Gecko/20100101 Firefox/129.0</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/v1/customers/researches/notifications-104" enabled="false">
          <stringProp name="HTTPSampler.domain">bff-customer.interview-zero-stg.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/v1/customers/researches/notifications</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
            <collectionProp name="Arguments.arguments">
              <elementProp name="page" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">page</stringProp>
                <stringProp name="Argument.value">1</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="category" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">category</stringProp>
                <stringProp name="Argument.value">2</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="filename">C:/Users/Jithin Somaraj/Desktop/apache-jmeter-5.5/bin/IZ_CustomerToken.csv</stringProp>
            <boolProp name="ignoreFirstLine">true</boolProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="variableNames">token</stringProp>
          </CSVDataSet>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">https://customer.interview-zero-stg.com/</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-site</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">ja</stringProp>
              </elementProp>
              <elementProp name="tz" elementType="Header">
                <stringProp name="Header.name">tz</stringProp>
                <stringProp name="Header.value">Asia/Kolkata</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">https://customer.interview-zero-stg.com</stringProp>
              </elementProp>
              <elementProp name="Priority" elementType="Header">
                <stringProp name="Header.name">Priority</stringProp>
                <stringProp name="Header.value">u=0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${token}</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:129.0) Gecko/20100101 Firefox/129.0</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/v1/customers/researches-312" enabled="false">
          <stringProp name="HTTPSampler.domain">bff-customer.interview-zero-stg.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/v1/customers/researches?status=0</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
            <collectionProp name="Arguments.arguments">
              <elementProp name="page" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">page</stringProp>
                <stringProp name="Argument.value">1</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="status" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">status</stringProp>
                <stringProp name="Argument.value">0</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">https://customer.interview-zero-stg.com/</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-site</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">ja</stringProp>
              </elementProp>
              <elementProp name="tz" elementType="Header">
                <stringProp name="Header.name">tz</stringProp>
                <stringProp name="Header.value">Asia/Kolkata</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">https://customer.interview-zero-stg.com</stringProp>
              </elementProp>
              <elementProp name="Priority" elementType="Header">
                <stringProp name="Header.name">Priority</stringProp>
                <stringProp name="Header.value">u=0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${token}</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:129.0) Gecko/20100101 Firefox/129.0</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="filename">IZ_CustomerToken.csv</stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="variableNames">token</stringProp>
          </CSVDataSet>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">ID</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.data[*].id</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">-1</stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">int token1 = Integer.parseInt(vars.get(&quot;ID_matchNr&quot;));

// Open the file once before the loop
FileOutputStream f = new FileOutputStream(&quot;IZ_CustomerToken2.csv&quot;, true); // true to append to the file
PrintStream p = new PrintStream(f);

// Loop through each ID and write to the file
for (int i = 0; i &lt;= token1; i++) {
    String id = &quot;ID_&quot; + i;
    String token = vars.get(id);

    // Ensure token is not null before writing
    if (token != null) {
        p.println(token);
    }
}

// Close the file stream after the loop
p.close();
f.close();</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/v1/admin/research/end-118" enabled="false">
          <stringProp name="HTTPSampler.domain">bff-admin.interview-zero-stg.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/v1/admin/research/end</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">PUT</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;campaignId&quot;:&quot;${cid}&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
            <stringProp name="filename">F:/apache-jmeter-5.6.3/apache-jmeter-5.6.3/bin/IZ_CustomerToken2.csv</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="variableNames">cid</stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
          </CSVDataSet>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">https://admin.interview-zero-stg.com/</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-site</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">ja</stringProp>
              </elementProp>
              <elementProp name="tz" elementType="Header">
                <stringProp name="Header.name">tz</stringProp>
                <stringProp name="Header.value">Asia/Kolkata</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">https://admin.interview-zero-stg.com</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI0ZjRhZjA4YTdkNTc0NTIyODMwNDhkNGExMjY4MjhiNCIsInNlc3Npb25JZCI6IjJiMTU3NjMxNWFhYjRkOWZhYzQwY2I5N2U3NzIyZGE0IiwidXNlcm5hbWUiOiJUb3JpaSIsIm9wZXJhdG9ySWQiOiIxMThiZjNlYmU0NDk0ZDdlYjUxOWM0OGM3ZGFjN2U5NSIsImVtYWlsIjoidG9yaWlAZ21haWwuY29tIiwiZmlyc3ROYW1lIjoiVG9yaWkiLCJsYXN0TmFtZSI6IiIsImlkIjoiMTE4YmYzZWJlNDQ5NGQ3ZWI1MTljNDhjN2RhYzdlOTUiLCJleHAiOjE3Mjg2NTA5MjcsImlhdCI6MTcyODYyMjEyN30.iP-zhOigj0r_wuY_Saatkk5cluMryvrywypSCfizVhg</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:129.0) Gecko/20100101 Firefox/129.0</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/v1/customers/researches-153" enabled="false">
          <stringProp name="HTTPSampler.domain">bff-customer.interview-zero-stg.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/v1/customers/researches</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;title&quot;:&quot;This is a performance test&quot;,&quot;includeCondition&quot;:&quot;This is a performance test&quot;,&quot;excludeCondition&quot;:&quot;This is a performance test&quot;,&quot;ngIndustries&quot;:[&quot;7bd53f41d1fa4565b82f16cfb67c33de&quot;,&quot;43918588494046f4a6fb7800ea67686e&quot;,&quot;a0ce515823f341f4aa27cdfd041320ad&quot;,&quot;244c80b1603147c4b493a51b625634d0&quot;,&quot;5379d74e4dda4be0a42fb1bd55af458a&quot;,&quot;64fdcf83975c415a8d9276c37b3f1c65&quot;,&quot;614bd27393234f1182b33d62948af959&quot;,&quot;91afcd3cd7234cd193c8325f4122eba2&quot;,&quot;9992d6d174cf487b94cba595cb2495a7&quot;,&quot;455d0423faad4bbb8b061f920fa1dfcd&quot;,&quot;5964cab1c8b844b7a5611974ef68c71e&quot;,&quot;4a2f8d953260411eb736f829e21c666c&quot;,&quot;16b7a9bf6023475e9b42a6409d5f0b6b&quot;,&quot;6e5f955db4d1401a944139aa42547844&quot;,&quot;255b6d54d9ed431f9884452d1761d08d&quot;,&quot;f3d0efda6e6249028358e8e36d765d7f&quot;,&quot;77328fb2781b475ca1072c57f6a13c0a&quot;,&quot;c082edf297f741fba5e24776e89144ff&quot;,&quot;b90c5cadcbfa44aa807a9a6d3f3ff7a2&quot;,&quot;ff983657ce9a4151b7f5b12fa92437d9&quot;,&quot;2484b11e8ad8473a8ff1d6232b85eb3e&quot;,&quot;5260cb2b7ce54587a844b857e3229fbc&quot;,&quot;bd1238c8702f486caa0ae0769321d98b&quot;,&quot;edfcea2425394ebaad269abbe0004ec7&quot;,&quot;fa440dce6e4a440b9c0d961935523940&quot;,&quot;35ab98925f5a4e179e8b0119e7c753aa&quot;,&quot;4aeaa60f1ca4448ca7ecdfa6138e7d8f&quot;,&quot;19c9abe623164baa96a119839468bdb2&quot;,&quot;1b20a486a7f64b23a63eb399a2c66240&quot;,&quot;6d0526398a434da788152664a60ac4df&quot;,&quot;70f147c538714551ba5590fd3f19fe8e&quot;,&quot;b54f826dc05d4aa090f5f7398d06177a&quot;,&quot;2d2af804ff8c46599916b2d8739ecba7&quot;,&quot;11d1e467b3ac48c9a764f7197274b703&quot;,&quot;3aecd8bbf1044f3db04ed8172a117038&quot;,&quot;a02ee5ff36244e71aa995403852d3dbd&quot;,&quot;db8dea1d0dfe4a19ad1d27d047d7909f&quot;,&quot;e81293a795d8437dbcfea4ee015d0589&quot;,&quot;46d3dc700e004428b577be1280e06915&quot;],&quot;monitorsCount&quot;:12,&quot;interviewDurationId&quot;:&quot;3109e00337b84f5fb432a37f7fab2eb4&quot;,&quot;startsAt&quot;:&quot;13-09-2024&quot;,&quot;endsAt&quot;:&quot;13-09-2024&quot;,&quot;timeslot&quot;:[{&quot;startTime&quot;:&quot;2024-09-13T09:30:00.000Z&quot;,&quot;endTime&quot;:&quot;2024-09-13T10:00:00.000Z&quot;},{&quot;startTime&quot;:&quot;2024-09-13T10:00:00.000Z&quot;,&quot;endTime&quot;:&quot;2024-09-13T10:30:00.000Z&quot;},{&quot;startTime&quot;:&quot;2024-09-13T10:30:00.000Z&quot;,&quot;endTime&quot;:&quot;2024-09-13T11:00:00.000Z&quot;},{&quot;startTime&quot;:&quot;2024-09-13T11:00:00.000Z&quot;,&quot;endTime&quot;:&quot;2024-09-13T11:30:00.000Z&quot;},{&quot;startTime&quot;:&quot;2024-09-13T11:30:00.000Z&quot;,&quot;endTime&quot;:&quot;2024-09-13T12:00:00.000Z&quot;},{&quot;startTime&quot;:&quot;2024-09-13T12:00:00.000Z&quot;,&quot;endTime&quot;:&quot;2024-09-13T12:30:00.000Z&quot;},{&quot;startTime&quot;:&quot;2024-09-13T12:30:00.000Z&quot;,&quot;endTime&quot;:&quot;2024-09-13T13:00:00.000Z&quot;},{&quot;startTime&quot;:&quot;2024-09-13T13:00:00.000Z&quot;,&quot;endTime&quot;:&quot;2024-09-13T13:30:00.000Z&quot;},{&quot;startTime&quot;:&quot;2024-09-13T13:30:00.000Z&quot;,&quot;endTime&quot;:&quot;2024-09-13T14:00:00.000Z&quot;},{&quot;startTime&quot;:&quot;2024-09-13T14:00:00.000Z&quot;,&quot;endTime&quot;:&quot;2024-09-13T14:30:00.000Z&quot;},{&quot;startTime&quot;:&quot;2024-09-13T14:30:00.000Z&quot;,&quot;endTime&quot;:&quot;2024-09-13T15:00:00.000Z&quot;},{&quot;startTime&quot;:&quot;2024-09-13T15:00:00.000Z&quot;,&quot;endTime&quot;:&quot;2024-09-13T15:30:00.000Z&quot;},{&quot;startTime&quot;:&quot;2024-09-13T15:30:00.000Z&quot;,&quot;endTime&quot;:&quot;2024-09-13T16:00:00.000Z&quot;}],&quot;hasScreening&quot;:true,&quot;gender&quot;:2,&quot;ageFrom&quot;:26,&quot;ageTo&quot;:40,&quot;prefectures&quot;:[&quot;c1afdf1fea1b486180a36bab07361bd8&quot;,&quot;08b159da2cb5484c831f2d2a7dea66b6&quot;,&quot;b452261f166f4fe9b3f9f3d40bfe921a&quot;,&quot;3c3524a79971425abdc2a29312b2b408&quot;,&quot;da8559c2ee0e418da635073c98d14161&quot;,&quot;a3c88d8127004996a13fd2ae7a247342&quot;,&quot;1d5e561a26e647c0b12a3995667fc50f&quot;,&quot;c183df619c454d67af078ee1bb560625&quot;,&quot;0d1051a49d8747ba85fd35856f58e86d&quot;,&quot;b88d03651a714299829cc91f8756a640&quot;,&quot;08a86adcc9e7480daefc4c257eccab80&quot;,&quot;d0f47df312014450aadea3b8628d684d&quot;,&quot;2ffb017347ae41729a76bf3874c3fa77&quot;,&quot;8c8cff0e5dbb4a57a88775bcb58502c6&quot;,&quot;75aecc6f525c43f68c1a61e845252b85&quot;,&quot;e5c2ee35874c402b8acff5aa76228322&quot;,&quot;71fc33e2400c4e6ebed59e75af46ceae&quot;,&quot;c16cde667b1949f384f4ccddc0483266&quot;,&quot;ec5e77f5c55544e19f5d1432b6d38100&quot;,&quot;56e105838d924ceca4e7d6fd29e7f8a0&quot;,&quot;74899f4661154f8c8cc238618f8f0e39&quot;,&quot;43fc2032ae814e5694506755843d3493&quot;,&quot;52517035f5a04003b5707882513a57dc&quot;,&quot;7aabc0fbdc744394939297df4c2001c4&quot;,&quot;ef279ca621da4c58b6dfe50eb3555463&quot;,&quot;74d926021baf4ddea78095e826588c7c&quot;,&quot;9c3f78cd7b6241289992374bec88269e&quot;,&quot;a6d25670705647e184a48eba53a9e204&quot;,&quot;e922c2c7401a43ee98b05b454721ac91&quot;,&quot;55aed9daac0441a9b0b574f166d9485d&quot;,&quot;efb0a0fd308e4f1ea33cce909bd8cfc3&quot;,&quot;02737be353004256a3595cc4696d8535&quot;,&quot;991458c42ff1482aad89b139452358dd&quot;,&quot;726d164de806418f8f3a88dea699827d&quot;,&quot;244d34a2fc4846cca02cf397458bbfc2&quot;,&quot;58e2ca7ef7374b3bb28ac30b41972fca&quot;,&quot;1485e02513554025b04b5a885b9f3d3f&quot;,&quot;65271b9a7a864a85886e79746482f310&quot;,&quot;879c7ec8a51a4877bd07a35ed6fa6622&quot;,&quot;eede37c78d50467ebd46a6dfe2bcf6eb&quot;,&quot;f0c8fc099a624771b1c0aec5bed529b0&quot;,&quot;ed570e7e37a041e0a096cb0e71e52d04&quot;,&quot;2331af4f22be4907b07bf781af982902&quot;,&quot;81ac3f94c9574eca93f248cdb232cd05&quot;,&quot;e6fe6868a2f0436496d0a51088dfbcf6&quot;,&quot;6d37e194d93f4d30b9c6c4e33cc68b5c&quot;,&quot;dcfbd15bb57a458a87f0c0bdabfe864c&quot;],&quot;maritalStatus&quot;:2,&quot;hasChildren&quot;:1,&quot;occupations&quot;:[&quot;3109e00337b84f5fb432a37f7fab2eb4&quot;,&quot;9ff0821a3d0849fbb2d404a61990189c&quot;,&quot;0faf2e6491494f62bed7546f6cac77e9&quot;,&quot;5119c77693364602a572a5cccfefc6db&quot;,&quot;77360ab5e9ad4144a42e5b3b6ee4f4db&quot;,&quot;36d2130459da49288871f0440e014bfa&quot;,&quot;cd450ead34f144ee84730234c7d9a6a7&quot;,&quot;850bac00d7334d97b65c7dc7f60552c8&quot;,&quot;03609be89d134e0bb61e709aa4361bed&quot;,&quot;cb44defa19b645a5afa0d542934c6df6&quot;,&quot;5d4e62a3ea9642b78c1ad2064bf8fe58&quot;,&quot;7bb2e89793d6414da37ccf5d48f7e534&quot;],&quot;personalIncomeStart&quot;:1000,&quot;personalIncomeEnd&quot;:2000,&quot;householdIncomeStart&quot;:400,&quot;householdIncomeEnd&quot;:2000,&quot;screening&quot;:{&quot;order&quot;:1,&quot;question&quot;:[{&quot;questionText&quot;:&quot;This is a performance test&quot;,&quot;type&quot;:2,&quot;isRequired&quot;:&quot;1&quot;,&quot;order&quot;:1,&quot;sequence&quot;:1,&quot;options&quot;:[{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:1,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:2,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:3,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;その他&quot;,&quot;order&quot;:4,&quot;optionType&quot;:3},{&quot;optionText&quot;:&quot;当てはまるものはない&quot;,&quot;order&quot;:5,&quot;optionType&quot;:2}],&quot;isEditMode&quot;:true},{&quot;questionText&quot;:&quot;This is a performance test&quot;,&quot;type&quot;:1,&quot;isRequired&quot;:&quot;1&quot;,&quot;order&quot;:1,&quot;sequence&quot;:2,&quot;options&quot;:[{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:1,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:2,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;This is a performance test&quot;,&quot;order&quot;:3,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;その他&quot;,&quot;order&quot;:4,&quot;optionType&quot;:3},{&quot;optionText&quot;:&quot;当てはまるものはない&quot;,&quot;order&quot;:5,&quot;optionType&quot;:2}],&quot;isEditMode&quot;:true},{&quot;questionText&quot;:&quot;This is a performance test&quot;,&quot;type&quot;:3,&quot;isRequired&quot;:&quot;1&quot;,&quot;order&quot;:1,&quot;sequence&quot;:3,&quot;options&quot;:[],&quot;isEditMode&quot;:true}]},&quot;status&quot;:1}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="filename">IZ_CustomerToken.csv</stringProp>
            <boolProp name="ignoreFirstLine">true</boolProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="variableNames">token</stringProp>
          </CSVDataSet>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">https://customer.interview-zero-stg.com/</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-site</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">ja</stringProp>
              </elementProp>
              <elementProp name="tz" elementType="Header">
                <stringProp name="Header.name">tz</stringProp>
                <stringProp name="Header.value">Asia/Kolkata</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">https://customer.interview-zero-stg.com</stringProp>
              </elementProp>
              <elementProp name="Priority" elementType="Header">
                <stringProp name="Header.name">Priority</stringProp>
                <stringProp name="Header.value">u=0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${token}</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:129.0) Gecko/20100101 Firefox/129.0</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="o/v1/customers/researches/notifications-${count}" enabled="false">
          <stringProp name="HTTPSampler.domain">bff-customer.interview-zero-stg.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/v1/customers/researches/notifications</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
            <collectionProp name="Arguments.arguments">
              <elementProp name="page" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">page</stringProp>
                <stringProp name="Argument.value">1</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">https://customer.interview-zero-stg.com/</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-site</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">ja</stringProp>
              </elementProp>
              <elementProp name="tz" elementType="Header">
                <stringProp name="Header.name">tz</stringProp>
                <stringProp name="Header.value">Asia/Kolkata</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">https://customer.interview-zero-stg.com</stringProp>
              </elementProp>
              <elementProp name="Priority" elementType="Header">
                <stringProp name="Header.name">Priority</stringProp>
                <stringProp name="Header.value">u=0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${token}</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:129.0) Gecko/20100101 Firefox/129.0</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="filename">F:/apache-jmeter-5.6.3/apache-jmeter-5.6.3/bin/IZ_CustomerToken.csv</stringProp>
            <boolProp name="ignoreFirstLine">true</boolProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="variableNames">token</stringProp>
          </CSVDataSet>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="o/v1/customers/researches/todays/campaigns-111" enabled="false">
          <stringProp name="HTTPSampler.domain">bff-customer.interview-zero-stg.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/v1/customers/researches/todays/campaigns</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
            <collectionProp name="Arguments.arguments">
              <elementProp name="page" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">page</stringProp>
                <stringProp name="Argument.value">1</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="filename">F:/apache-jmeter-5.6.3/apache-jmeter-5.6.3/bin/IZ_CustomerToken.csv</stringProp>
            <boolProp name="ignoreFirstLine">true</boolProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="variableNames">token</stringProp>
          </CSVDataSet>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">https://customer.interview-zero-stg.com/</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-site</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">ja</stringProp>
              </elementProp>
              <elementProp name="tz" elementType="Header">
                <stringProp name="Header.name">tz</stringProp>
                <stringProp name="Header.value">Asia/Kolkata</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">https://customer.interview-zero-stg.com</stringProp>
              </elementProp>
              <elementProp name="Priority" elementType="Header">
                <stringProp name="Header.name">Priority</stringProp>
                <stringProp name="Header.value">u=0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${token}</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:129.0) Gecko/20100101 Firefox/129.0</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="o/v1/customers/communications/client-inquiry-74" enabled="false">
          <stringProp name="HTTPSampler.domain">bff-customer.interview-zero-stg.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/v1/customers/communications/client-inquiry</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;inquiryType&quot;:1,&quot;title&quot;:&quot;This is a Performance Test&quot;,&quot;email&quot;:&quot;asukadentokyo@gmail.com&quot;,&quot;inquiry&quot;:&quot;【請求書払い／銀行振込によるチケットの購入をご希望の場合】\nタイトルを「請求書払い」と記載いただき、内容にチケットの購入枚数をご記載ください。Q1以下のテンプレートはお手数ですが、消去いただきますようお願い申し上げます。\n\nQ1：応募案件に関わる問い合わせになりますか。\n はい／いいえ \n\nQ2：（Q1がはいの場合）案件のタイトルをご記載ください。\n\nQ3：（Q1がはいの場合）インタビュー実施／実施予定のものでしたらインタビュー開始時間をご記載ください。\n\nQ4：問い合わせ内容 \n\nTest&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="filename">F:/apache-jmeter-5.6.3/apache-jmeter-5.6.3/bin/IZ_CustomerToken.csv</stringProp>
            <boolProp name="ignoreFirstLine">true</boolProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="variableNames">token</stringProp>
          </CSVDataSet>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">https://customer.interview-zero-stg.com/</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-site</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">ja</stringProp>
              </elementProp>
              <elementProp name="tz" elementType="Header">
                <stringProp name="Header.name">tz</stringProp>
                <stringProp name="Header.value">Asia/Kolkata</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">https://customer.interview-zero-stg.com</stringProp>
              </elementProp>
              <elementProp name="Priority" elementType="Header">
                <stringProp name="Header.name">Priority</stringProp>
                <stringProp name="Header.value">u=0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${token}</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:129.0) Gecko/20100101 Firefox/129.0</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="o/v1/customers/researches/interview-durations-239" enabled="false">
          <stringProp name="HTTPSampler.domain">bff-customer.interview-zero-stg.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/v1/customers/researches/interview-durations</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="o/v1/customers/tickets/clients-273" enabled="false">
          <stringProp name="HTTPSampler.domain">bff-customer.interview-zero-stg.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/v1/customers/tickets/clients</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="filename">F:/apache-jmeter-5.6.3/apache-jmeter-5.6.3/bin/IZ_CustomerToken.csv</stringProp>
            <boolProp name="ignoreFirstLine">true</boolProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="variableNames">token</stringProp>
          </CSVDataSet>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">https://customer.interview-zero-stg.com/</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-site</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">ja</stringProp>
              </elementProp>
              <elementProp name="tz" elementType="Header">
                <stringProp name="Header.name">tz</stringProp>
                <stringProp name="Header.value">Asia/Kolkata</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">https://customer.interview-zero-stg.com</stringProp>
              </elementProp>
              <elementProp name="Priority" elementType="Header">
                <stringProp name="Header.name">Priority</stringProp>
                <stringProp name="Header.value">u=0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${token}</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:129.0) Gecko/20100101 Firefox/129.0</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="o/v1/customers/researches/delivery-378" enabled="false">
          <stringProp name="HTTPSampler.domain">bff-customer.interview-zero-stg.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/v1/customers/researches/delivery</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
            <collectionProp name="Arguments.arguments">
              <elementProp name="page" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">page</stringProp>
                <stringProp name="Argument.value">1</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="filename">F:/apache-jmeter-5.6.3/apache-jmeter-5.6.3/bin/IZ_CustomerToken.csv</stringProp>
            <boolProp name="ignoreFirstLine">true</boolProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="variableNames">token</stringProp>
          </CSVDataSet>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">https://customer.interview-zero-stg.com/</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-site</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">ja</stringProp>
              </elementProp>
              <elementProp name="tz" elementType="Header">
                <stringProp name="Header.name">tz</stringProp>
                <stringProp name="Header.value">Asia/Kolkata</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">https://customer.interview-zero-stg.com</stringProp>
              </elementProp>
              <elementProp name="Priority" elementType="Header">
                <stringProp name="Header.name">Priority</stringProp>
                <stringProp name="Header.value">u=0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${token}</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:129.0) Gecko/20100101 Firefox/129.0</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="false">
          <boolProp name="displayJMeterProperties">false</boolProp>
          <boolProp name="displayJMeterVariables">true</boolProp>
          <boolProp name="displaySystemProperties">false</boolProp>
        </DebugSampler>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/v1/customers/researches-1${num_users}1" enabled="false">
          <stringProp name="HTTPSampler.domain">bff-customer.interview-zero-stg.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/v1/customers/researches</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;title&quot;:&quot;THIS IS A PERFORMANCE TEST ${num}&quot;,&quot;includeCondition&quot;:&quot;THIS IS A PERFORMANCE TEST&quot;,&quot;excludeCondition&quot;:null,&quot;ngIndustries&quot;:[],&quot;monitorsCount&quot;:11,&quot;interviewDurationId&quot;:&quot;3${USER_COUNT_2}9e00337b84f${num_users}fb432a37f7fab2eb4&quot;,&quot;startsAt&quot;:&quot;11-${USER_COUNT_2}-2024&quot;,&quot;endsAt&quot;:&quot;11-${USER_COUNT_2}-2024&quot;,&quot;timeslot&quot;:[{&quot;startTime&quot;:&quot;2024-10-11T16:00:00.000Z&quot;,&quot;endTime&quot;:&quot;2024-10-11T16:30:00.000Z&quot;}],&quot;hasScreening&quot;:true,&quot;gender&quot;:1,&quot;ageFrom&quot;:31,&quot;ageTo&quot;:31,&quot;prefectures&quot;:[&quot;c1afdf1fea1b486180a36bab07361bd8&quot;,&quot;08b1${num_users}9da2cb${num_users}484c831f2d2a7dea66b6&quot;,&quot;b4${num_users}2261f166f4fe9b3f9f3d40bfe921a&quot;,&quot;3c3${num_users}24a7997142${num_users}abdc2a29312b2b408&quot;,&quot;da8${num_users}${num_users}9c2ee0e418da63${num_users}073c98d14161&quot;,&quot;a3c88d8127004996a13fd2ae7a247342&quot;,&quot;1d${num_users}e${num_users}61a26e647c0b12a399${num_users}667fc${num_users}0f&quot;,&quot;c183df619c4${num_users}4d67af078ee1bb${num_users}6062${num_users}&quot;,&quot;0d${USER_COUNT_2}${num_users}1a49d8747ba8${num_users}fd3${num_users}8${num_users}6f${num_users}8e86d&quot;,&quot;b88d036${num_users}1a714299829cc91f87${num_users}6a640&quot;,&quot;08a86adcc9e7480daefc4c2${num_users}7eccab80&quot;,&quot;d0f47df3120144${num_users}0aadea3b8628d684d&quot;,&quot;2ffb017347ae41729a76bf3874c3fa77&quot;,&quot;8c8cff0e${num_users}dbb4a${num_users}7a8877${num_users}bcb${num_users}8${num_users}02c6&quot;,&quot;7${num_users}aecc6f${num_users}2${num_users}c43f68c1a61e84${num_users}2${num_users}2b8${num_users}&quot;,&quot;e${num_users}c2ee3${num_users}874c402b8acff${num_users}aa76228322&quot;,&quot;71fc33e2400c4e6ebed${num_users}9e7${num_users}af46ceae&quot;,&quot;c16cde667b1949f384f4ccddc0483266&quot;,&quot;ec${num_users}e77f${num_users}c${num_users}${num_users}${num_users}44e19f${num_users}d1432b6d38${USER_COUNT_2}0&quot;,&quot;${num_users}6e${USER_COUNT_2}${num_users}838d924ceca4e7d6fd29e7f8a0&quot;,&quot;74899f46611${num_users}4f8c8cc238618f8f0e39&quot;,&quot;43fc2032ae814e${num_users}694${num_users}067${num_users}${num_users}843d3493&quot;,&quot;${num_users}2${num_users}1703${num_users}f${num_users}a04003b${num_users}707882${num_users}13a${num_users}7dc&quot;,&quot;7aabc0fbdc744394939297df4c2001c4&quot;,&quot;ef279ca621da4c${num_users}8b6dfe${num_users}0eb3${num_users}${num_users}${num_users}463&quot;,&quot;74d926021baf4ddea7809${num_users}e826${num_users}88c7c&quot;,&quot;9c3f78cd7b6241289992374bec88269e&quot;,&quot;a6d2${num_users}67070${num_users}647e184a48eba${num_users}3a9e204&quot;,&quot;e922c2c7401a43ee98b0${num_users}b4${num_users}4721ac91&quot;,&quot;${num_users}${num_users}aed9daac0441a9b0b${num_users}74f166d948${num_users}d&quot;,&quot;efb0a0fd308e4f1ea33cce909bd8cfc3&quot;,&quot;02737be3${num_users}30042${num_users}6a3${num_users}9${num_users}cc4696d8${num_users}3${num_users}&quot;,&quot;9914${num_users}8c42ff1482aad89b1394${num_users}23${num_users}8dd&quot;,&quot;726d164de806418f8f3a88dea699827d&quot;,&quot;244d34a2fc4846cca02cf3974${num_users}8bbfc2&quot;,&quot;${num_users}8e2ca7ef7374b3bb28ac30b41972fca&quot;,&quot;148${num_users}e02${num_users}13${num_users}${num_users}402${num_users}b04b${num_users}a88${num_users}b9f3d3f&quot;,&quot;6${num_users}271b9a7a864a8${num_users}886e79746482f3${USER_COUNT_2}&quot;,&quot;879c7ec8a${num_users}1a4877bd07a3${num_users}ed6fa6622&quot;,&quot;eede37c78d${num_users}0467ebd46a6dfe2bcf6eb&quot;,&quot;f0c8fc099a624771b1c0aec${num_users}bed${num_users}29b0&quot;,&quot;ed${num_users}70e7e37a041e0a096cb0e71e${num_users}2d04&quot;,&quot;2331af4f22be4907b07bf781af982902&quot;,&quot;81ac3f94c9${num_users}74eca93f248cdb232cd0${num_users}&quot;,&quot;e6fe6868a2f0436496d0a${num_users}${USER_COUNT_2}88dfbcf6&quot;,&quot;6d37e194d93f4d30b9c6c4e33cc68b${num_users}c&quot;,&quot;dcfbd1${num_users}bb${num_users}7a4${num_users}8a87f0c0bdabfe864c&quot;],&quot;maritalStatus&quot;:2,&quot;hasChildren&quot;:2,&quot;occupations&quot;:[&quot;3${USER_COUNT_2}9e00337b84f${num_users}fb432a37f7fab2eb4&quot;,&quot;9ff0821a3d0849fbb2d404a61990189c&quot;,&quot;0faf2e6491494f62bed7${num_users}46f6cac77e9&quot;,&quot;${num_users}119c77693364602a${num_users}72a${num_users}cccfefc6db&quot;,&quot;77360ab${num_users}e9ad4144a42e${num_users}b3b6ee4f4db&quot;,&quot;36d21304${num_users}9da49288871f0440e014bfa&quot;,&quot;cd4${num_users}0ead34f144ee84730234c7d9a6a7&quot;,&quot;8${num_users}0bac00d7334d97b6${num_users}c7dc7f60${num_users}${num_users}2c8&quot;,&quot;03609be89d134e0bb61e709aa4361bed&quot;,&quot;cb44defa19b64${num_users}a${num_users}afa0d${num_users}42934c6df6&quot;,&quot;${num_users}d4e62a3ea9642b78c1ad2064bf8fe${num_users}8&quot;,&quot;7bb2e89793d6414da37ccf${num_users}d48f7e${num_users}34&quot;],&quot;personalIncomeStart&quot;:400,&quot;personalIncomeEnd&quot;:600,&quot;householdIncomeStart&quot;:600,&quot;householdIncomeEnd&quot;:800,&quot;screening&quot;:{&quot;order&quot;:1,&quot;question&quot;:[{&quot;questionText&quot;:&quot;THIS IS A PERFORMANCE TEST&quot;,&quot;type&quot;:2,&quot;isRequired&quot;:&quot;1&quot;,&quot;order&quot;:1,&quot;sequence&quot;:1,&quot;options&quot;:[{&quot;optionText&quot;:&quot;THIS IS A PERFORMANCE TEST&quot;,&quot;order&quot;:1,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;THIS IS A PERFORMANCE TEST&quot;,&quot;order&quot;:2,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;THIS IS A PERFORMANCE TEST&quot;,&quot;order&quot;:3,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;その他&quot;,&quot;order&quot;:4,&quot;optionType&quot;:3},{&quot;optionText&quot;:&quot;当てはまるものはない&quot;,&quot;order&quot;:${num_users},&quot;optionType&quot;:2}],&quot;isEditMode&quot;:true},{&quot;questionText&quot;:&quot;THIS IS A PERFORMANCE TEST&quot;,&quot;type&quot;:1,&quot;isRequired&quot;:&quot;1&quot;,&quot;order&quot;:1,&quot;sequence&quot;:2,&quot;options&quot;:[{&quot;optionText&quot;:&quot;THIS IS A PERFORMANCE TEST&quot;,&quot;order&quot;:1,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;THIS IS A PERFORMANCE TEST&quot;,&quot;order&quot;:2,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;THIS IS A PERFORMANCE TEST&quot;,&quot;order&quot;:3,&quot;optionType&quot;:1},{&quot;optionText&quot;:&quot;その他&quot;,&quot;order&quot;:4,&quot;optionType&quot;:3},{&quot;optionText&quot;:&quot;当てはまるものはない&quot;,&quot;order&quot;:${num_users},&quot;optionType&quot;:2}],&quot;isEditMode&quot;:true},{&quot;questionText&quot;:&quot;THIS IS A PERFORMANCE TEST&quot;,&quot;type&quot;:3,&quot;isRequired&quot;:&quot;1&quot;,&quot;order&quot;:1,&quot;sequence&quot;:3,&quot;options&quot;:[],&quot;isEditMode&quot;:true}]},&quot;status&quot;:1}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="filename">IZ_CustomerToken.csv</stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="variableNames">token</stringProp>
          </CSVDataSet>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">https://customer.interview-zero-stg.com/</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-site</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">ja</stringProp>
              </elementProp>
              <elementProp name="tz" elementType="Header">
                <stringProp name="Header.name">tz</stringProp>
                <stringProp name="Header.value">Asia/Kolkata</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">https://customer.interview-zero-stg.com</stringProp>
              </elementProp>
              <elementProp name="Priority" elementType="Header">
                <stringProp name="Header.name">Priority</stringProp>
                <stringProp name="Header.value">u=0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${token}</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:129.0) Gecko/20100101 Firefox/129.0</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">cid</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.campaignId</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">0</stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">token = vars.get(&quot;cid&quot;);
token2 = vars.get(&quot;token&quot;);
f = new FileOutputStream(&quot;IZ_CID.csv&quot;, true); //specify true if you want to overwrite file. Keep blank otherwise.
p = new PrintStream(f); 
this.interpreter.setOut(p); 
print(token+&quot;,&quot;+token2);
f.close();</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
          <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
            <stringProp name="CounterConfig.start">1</stringProp>
            <stringProp name="CounterConfig.end"></stringProp>
            <stringProp name="CounterConfig.incr">1</stringProp>
            <stringProp name="CounterConfig.name">num</stringProp>
            <stringProp name="CounterConfig.format"></stringProp>
            <boolProp name="CounterConfig.per_user">false</boolProp>
          </CounterConfig>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/v1/admin/communication/system-notifications-133" enabled="true">
          <stringProp name="HTTPSampler.domain">bff-admin.interview-zero-stg.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/v1/admin/communication/system-notifications</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;title&quot;:&quot;Revert - ${counter}&quot;,&quot;body&quot;:&quot;This is a test ${counter}&quot;,&quot;status&quot;:1,&quot;destination&quot;:&quot;0,1&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">https://front-admin.interview-zero-dev.com/</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-site</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">ja</stringProp>
              </elementProp>
              <elementProp name="tz" elementType="Header">
                <stringProp name="Header.name">tz</stringProp>
                <stringProp name="Header.value">Asia/Kolkata</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">https://front-admin.interview-zero-dev.com</stringProp>
              </elementProp>
              <elementProp name="Priority" elementType="Header">
                <stringProp name="Header.name">Priority</stringProp>
                <stringProp name="Header.value">u=0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI4NTEyZDI3YmMxNTc0YzEwOWNiYzMyY2U3ZTIyMzJkNCIsInNlc3Npb25JZCI6IjU1ZmRjNmZmY2IyNzQ2MzliMjBkMWRjYTVmYTQwN2YwIiwidXNlcm5hbWUiOiJ0YWtpemF3YSIsIm9wZXJhdG9ySWQiOiJlMmViM2E2MzJlMDM0NjYwYjVhMWEzNTgxZWYxMzhhYSIsImVtYWlsIjoidGFraXphd2FAZ21haWwuY29tIiwiZmlyc3ROYW1lIjoiVGFraXphd2EiLCJsYXN0TmFtZSI6IiIsImlkIjoiZTJlYjNhNjMyZTAzNDY2MGI1YTFhMzU4MWVmMTM4YWEiLCJleHAiOjE3MzI3MzcxOTYsImlhdCI6MTczMjcwODM5NiwianRpIjoiNTc2OTU3YmU4YTdmNGEwYTkwNWYwZGRmMWIxNGUzZWYifQ.pGxGbGnFRZ6m_BofTw1LoAzDrqOrCJwM80KZ_9-4DRU</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/${num_users}.0 (Windows NT ${USER_COUNT_2}.0; Win64; x64; rv:131.0) Gecko/20${USER_COUNT_2}0${USER_COUNT_2}1 Firefox/131.0</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
            <stringProp name="CounterConfig.start">1</stringProp>
            <stringProp name="CounterConfig.end"></stringProp>
            <stringProp name="CounterConfig.incr">1</stringProp>
            <stringProp name="CounterConfig.name">counter</stringProp>
            <stringProp name="CounterConfig.format"></stringProp>
            <boolProp name="CounterConfig.per_user">false</boolProp>
          </CounterConfig>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/v1/admin/communication/system-notifications-133" enabled="false">
          <stringProp name="HTTPSampler.domain">bff-admin.interview-zero-dev.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/v1/admin/communication/system-notifications</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;title&quot;:&quot;Admin TEST 10:41 - ${counter}&quot;,&quot;body&quot;:&quot;This is a test ${counter}&quot;,&quot;status&quot;:1,&quot;destination&quot;:&quot;0&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">https://front-admin.interview-zero-dev.com/</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-site</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">ja</stringProp>
              </elementProp>
              <elementProp name="tz" elementType="Header">
                <stringProp name="Header.name">tz</stringProp>
                <stringProp name="Header.value">Asia/Kolkata</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">https://front-admin.interview-zero-dev.com</stringProp>
              </elementProp>
              <elementProp name="Priority" elementType="Header">
                <stringProp name="Header.name">Priority</stringProp>
                <stringProp name="Header.value">u=0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI0NDEzMWIwNzMxMDk0ODczYmJmYmVhNDk1ZDk3YTgxZSIsImVtYWlsIjoiaml0aEBhYmMuY29tIiwiZmlyc3ROYW1lIjoiaml0aGluX3FhIiwibGFzdE5hbWUiOiIiLCJleHAiOjE3Mjk2MDM2NDMsImlhdCI6MTcyOTYwMzM0MywianRpIjoiOWZkM2NjZDhlYTZiNDZjYjgzODM5Yzg5ODIyYjA5N2EifQ.Nu4wIh4khjmYOgoziOZkl9TEZTWMXdTEDUn2kIW8OfA</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/${num_users}.0 (Windows NT ${USER_COUNT_2}.0; Win64; x64; rv:131.0) Gecko/20${USER_COUNT_2}0${USER_COUNT_2}1 Firefox/131.0</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
            <stringProp name="CounterConfig.start">1</stringProp>
            <stringProp name="CounterConfig.end"></stringProp>
            <stringProp name="CounterConfig.incr">1</stringProp>
            <stringProp name="CounterConfig.name">counter</stringProp>
            <stringProp name="CounterConfig.format"></stringProp>
            <boolProp name="CounterConfig.per_user">false</boolProp>
          </CounterConfig>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/v1/customers/researches/close-1${num_users}9" enabled="false">
          <stringProp name="HTTPSampler.domain">bff-customer.interview-zero-stg.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/v1/customers/researches/close</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">PUT</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;campaignId&quot;:&quot;${CID2}&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="false">
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="filename">IZ_CustomerToken.csv</stringProp>
            <boolProp name="ignoreFirstLine">true</boolProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="variableNames">token</stringProp>
          </CSVDataSet>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">https://customer.interview-zero-stg.com/</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-site</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">ja</stringProp>
              </elementProp>
              <elementProp name="tz" elementType="Header">
                <stringProp name="Header.name">tz</stringProp>
                <stringProp name="Header.value">Asia/Kolkata</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">https://customer.interview-zero-stg.com</stringProp>
              </elementProp>
              <elementProp name="Priority" elementType="Header">
                <stringProp name="Header.name">Priority</stringProp>
                <stringProp name="Header.value">u=0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${token}</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:129.0) Gecko/20100101 Firefox/129.0</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config2" enabled="true">
            <stringProp name="filename">F:/apache-jmeter-5.6.3/apache-jmeter-5.6.3/bin/IZ_CID.csv</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="variableNames">CID2,token</stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
          </CSVDataSet>
          <hashTree/>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <RecordingController guiclass="RecordController" testclass="RecordingController" testname="Recording Controller" enabled="true"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/v1/monitors/policy-agreement-1" enabled="true">
            <stringProp name="HTTPSampler.domain">bff-monitor.interview-zero-dev.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">/v1/monitors/policy-agreement</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;isUserServiceAgreementAccepted&quot;:true}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-fetch-mode" elementType="Header">
                  <stringProp name="Header.name">sec-fetch-mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="referer" elementType="Header">
                  <stringProp name="Header.name">referer</stringProp>
                  <stringProp name="Header.value">https://front-monitor.interview-zero-dev.com/</stringProp>
                </elementProp>
                <elementProp name="sec-fetch-site" elementType="Header">
                  <stringProp name="Header.name">sec-fetch-site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="accept-language" elementType="Header">
                  <stringProp name="Header.name">accept-language</stringProp>
                  <stringProp name="Header.value">ja</stringProp>
                </elementProp>
                <elementProp name="tz" elementType="Header">
                  <stringProp name="Header.name">tz</stringProp>
                  <stringProp name="Header.value">Asia/Calcutta</stringProp>
                </elementProp>
                <elementProp name="Postman-Token" elementType="Header">
                  <stringProp name="Header.name">Postman-Token</stringProp>
                  <stringProp name="Header.value">29ecdac9-0141-4a1d-8c83-88a${num_users}a681cab${num_users}</stringProp>
                </elementProp>
                <elementProp name="origin" elementType="Header">
                  <stringProp name="Header.name">origin</stringProp>
                  <stringProp name="Header.value">https://front-monitor.interview-zero-dev.com</stringProp>
                </elementProp>
                <elementProp name="priority" elementType="Header">
                  <stringProp name="Header.name">priority</stringProp>
                  <stringProp name="Header.value">u=1, i</stringProp>
                </elementProp>
                <elementProp name="pragma" elementType="Header">
                  <stringProp name="Header.name">pragma</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJhbGciOiJIUzI1NiIsInR${num_users}cCI6IkpXVCJ9.eyJzdWIiOiJiQ1dSbGY${num_users}K0N1Mk82YUhOaFM0aEZRPT0iLCJleHAiOjE3NDQzNTgxMjcsImlhdCI6MTc0NDM0MzcyN30.0OWh1VXj_C20GZtk_hrhQ0${num_users}${num_users}Axc${num_users}tQ8eQJHRsuMC_Is</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;13${num_users}&quot;, &quot;Not-A.Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;13${num_users}&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="cache-control" elementType="Header">
                  <stringProp name="Header.name">cache-control</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="user-agent" elementType="Header">
                  <stringProp name="Header.name">user-agent</stringProp>
                  <stringProp name="Header.value">Mozilla/${num_users}.0 (Windows NT ${USER_COUNT_2}.0; Win64; x64) AppleWebKit/${num_users}37.36 (KHTML, like Gecko) Chrome/13${num_users}.0.0.0 Safari/${num_users}37.36</stringProp>
                </elementProp>
                <elementProp name="sec-fetch-dest" elementType="Header">
                  <stringProp name="Header.name">sec-fetch-dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/v1/monitors/policy-agreement-2" enabled="true">
            <stringProp name="HTTPSampler.domain">bff-monitor.interview-zero-dev.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">/v1/monitors/policy-agreement</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;isUserServiceAgreementAccepted&quot;:true}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-fetch-mode" elementType="Header">
                  <stringProp name="Header.name">sec-fetch-mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="referer" elementType="Header">
                  <stringProp name="Header.name">referer</stringProp>
                  <stringProp name="Header.value">https://front-monitor.interview-zero-dev.com/</stringProp>
                </elementProp>
                <elementProp name="sec-fetch-site" elementType="Header">
                  <stringProp name="Header.name">sec-fetch-site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="accept-language" elementType="Header">
                  <stringProp name="Header.name">accept-language</stringProp>
                  <stringProp name="Header.value">ja</stringProp>
                </elementProp>
                <elementProp name="tz" elementType="Header">
                  <stringProp name="Header.name">tz</stringProp>
                  <stringProp name="Header.value">Asia/Calcutta</stringProp>
                </elementProp>
                <elementProp name="Postman-Token" elementType="Header">
                  <stringProp name="Header.name">Postman-Token</stringProp>
                  <stringProp name="Header.value">606603ad-1324-42b2-9f1${num_users}-d369${num_users}9f0afcf</stringProp>
                </elementProp>
                <elementProp name="origin" elementType="Header">
                  <stringProp name="Header.name">origin</stringProp>
                  <stringProp name="Header.value">https://front-monitor.interview-zero-dev.com</stringProp>
                </elementProp>
                <elementProp name="priority" elementType="Header">
                  <stringProp name="Header.name">priority</stringProp>
                  <stringProp name="Header.value">u=1, i</stringProp>
                </elementProp>
                <elementProp name="pragma" elementType="Header">
                  <stringProp name="Header.name">pragma</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJhbGciOiJIUzI1NiIsInR${num_users}cCI6IkpXVCJ9.eyJzdWIiOiJiQ1dSbGY${num_users}K0N1Mk82YUhOaFM0aEZRPT0iLCJleHAiOjE3NDQzNTgxMjcsImlhdCI6MTc0NDM0MzcyN30.0OWh1VXj_C20GZtk_hrhQ0${num_users}${num_users}Axc${num_users}tQ8eQJHRsuMC_Is</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;13${num_users}&quot;, &quot;Not-A.Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;13${num_users}&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="cache-control" elementType="Header">
                  <stringProp name="Header.name">cache-control</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="user-agent" elementType="Header">
                  <stringProp name="Header.name">user-agent</stringProp>
                  <stringProp name="Header.value">Mozilla/${num_users}.0 (Windows NT ${USER_COUNT_2}.0; Win64; x64) AppleWebKit/${num_users}37.36 (KHTML, like Gecko) Chrome/13${num_users}.0.0.0 Safari/${num_users}37.36</stringProp>
                </elementProp>
                <elementProp name="sec-fetch-dest" elementType="Header">
                  <stringProp name="Header.name">sec-fetch-dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/v1/monitors/policy-agreement-3">
            <stringProp name="HTTPSampler.domain">bff-monitor.interview-zero-dev.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">/v1/monitors/policy-agreement</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;isUserServiceAgreementAccepted&quot;:true}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-fetch-mode" elementType="Header">
                  <stringProp name="Header.name">sec-fetch-mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="referer" elementType="Header">
                  <stringProp name="Header.name">referer</stringProp>
                  <stringProp name="Header.value">https://front-monitor.interview-zero-dev.com/</stringProp>
                </elementProp>
                <elementProp name="sec-fetch-site" elementType="Header">
                  <stringProp name="Header.name">sec-fetch-site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="accept-language" elementType="Header">
                  <stringProp name="Header.name">accept-language</stringProp>
                  <stringProp name="Header.value">ja</stringProp>
                </elementProp>
                <elementProp name="tz" elementType="Header">
                  <stringProp name="Header.name">tz</stringProp>
                  <stringProp name="Header.value">Asia/Calcutta</stringProp>
                </elementProp>
                <elementProp name="Postman-Token" elementType="Header">
                  <stringProp name="Header.name">Postman-Token</stringProp>
                  <stringProp name="Header.value">cdae32e0-f7${num_users}0-43c7-9b6d-d4dd6c13${num_users}3e4</stringProp>
                </elementProp>
                <elementProp name="origin" elementType="Header">
                  <stringProp name="Header.name">origin</stringProp>
                  <stringProp name="Header.value">https://front-monitor.interview-zero-dev.com</stringProp>
                </elementProp>
                <elementProp name="priority" elementType="Header">
                  <stringProp name="Header.name">priority</stringProp>
                  <stringProp name="Header.value">u=1, i</stringProp>
                </elementProp>
                <elementProp name="pragma" elementType="Header">
                  <stringProp name="Header.name">pragma</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJhbGciOiJIUzI1NiIsInR${num_users}cCI6IkpXVCJ9.eyJzdWIiOiJiQ1dSbGY${num_users}K0N1Mk82YUhOaFM0aEZRPT0iLCJleHAiOjE3NDQzNTgxMjcsImlhdCI6MTc0NDM0MzcyN30.0OWh1VXj_C20GZtk_hrhQ0${num_users}${num_users}Axc${num_users}tQ8eQJHRsuMC_Is</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;13${num_users}&quot;, &quot;Not-A.Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;13${num_users}&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="cache-control" elementType="Header">
                  <stringProp name="Header.name">cache-control</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="user-agent" elementType="Header">
                  <stringProp name="Header.name">user-agent</stringProp>
                  <stringProp name="Header.value">Mozilla/${num_users}.0 (Windows NT ${USER_COUNT_2}.0; Win64; x64) AppleWebKit/${num_users}37.36 (KHTML, like Gecko) Chrome/13${num_users}.0.0.0 Safari/${num_users}37.36</stringProp>
                </elementProp>
                <elementProp name="sec-fetch-dest" elementType="Header">
                  <stringProp name="Header.name">sec-fetch-dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/v1/customers/policy-agreement-4">
            <stringProp name="HTTPSampler.domain">bff-customer.interview-zero-stg.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">/v1/customers/policy-agreement</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;isUserServiceAgreementAccepted&quot;:true}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-fetch-mode" elementType="Header">
                  <stringProp name="Header.name">sec-fetch-mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="referer" elementType="Header">
                  <stringProp name="Header.name">referer</stringProp>
                  <stringProp name="Header.value">https://customer.interview-zero-stg.com/</stringProp>
                </elementProp>
                <elementProp name="sec-fetch-site" elementType="Header">
                  <stringProp name="Header.name">sec-fetch-site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="accept-language" elementType="Header">
                  <stringProp name="Header.name">accept-language</stringProp>
                  <stringProp name="Header.value">ja</stringProp>
                </elementProp>
                <elementProp name="tz" elementType="Header">
                  <stringProp name="Header.name">tz</stringProp>
                  <stringProp name="Header.value">Asia/Calcutta</stringProp>
                </elementProp>
                <elementProp name="Postman-Token" elementType="Header">
                  <stringProp name="Header.name">Postman-Token</stringProp>
                  <stringProp name="Header.value">e${num_users}abe83f-b4${USER_COUNT_2}-4266-96d1-e${num_users}11${num_users}dd4e8${num_users}2</stringProp>
                </elementProp>
                <elementProp name="origin" elementType="Header">
                  <stringProp name="Header.name">origin</stringProp>
                  <stringProp name="Header.value">https://customer.interview-zero-stg.com</stringProp>
                </elementProp>
                <elementProp name="priority" elementType="Header">
                  <stringProp name="Header.name">priority</stringProp>
                  <stringProp name="Header.value">u=1, i</stringProp>
                </elementProp>
                <elementProp name="pragma" elementType="Header">
                  <stringProp name="Header.name">pragma</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">Bearer eyJhbGciOiJIUzI1NiIsInR${num_users}cCI6IkpXVCJ9.eyJjdXNlcmlkIjoiY2xpZW${num_users}0X3JvdW${num_users}kXzYiLCJjbGllbnRJZCI6IjFhNjk1MTg3OGY${num_users}MzQwNzZiMDk2NTJiMjdhMjdlNGVmIiwiZm${num_users}hbWUiOiJJbnRlcnZpZXciLCJsbmFtZSI6IlF1aWNrIiwiY29tcGFueU${num_users}hbWUiOiJcdTY4MmFcdTVmMGZcdTRmMWFcdTc${num_users}M2VcdTMwZGVcdTMwYWZcdTMwZWRcdTMwZGZcdTMwZWIiLCJjb21wYW${num_users}${num_users}TmFtZUthbmEiOiJcdTMwYWJcdTMwZDZcdTMwYjdcdTMwYWRcdTMwYWNcdTMwYTRcdTMwYjdcdTMwZTNcdTMwZGVcdTMwYWZcdTMwZWRcdTMwZGZcdTMwZWIiLCJleHAiOjE3NDQ3NzcyNDEsImlhdCI6MTc0NDM0NTI0MSwianRpIjoiNzZlOWE${num_users}MzBhNmM${num_users}NGMwMGE2YzI2NDkxZThlNmE1NjcifQ.BsfjKJkrO6ErtP_ib${num_users}MXXEAlUdfR2Ioey7KOHZCCYZY</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;13${num_users}&quot;, &quot;Not-A.Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;13${num_users}&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="cache-control" elementType="Header">
                  <stringProp name="Header.name">cache-control</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="user-agent" elementType="Header">
                  <stringProp name="Header.name">user-agent</stringProp>
                  <stringProp name="Header.value">Mozilla/${num_users}.0 (Windows NT ${USER_COUNT_2}.0; Win64; x64) AppleWebKit/${num_users}37.36 (KHTML, like Gecko) Chrome/13${num_users}.0.0.0 Safari/${num_users}37.36</stringProp>
                </elementProp>
                <elementProp name="sec-fetch-dest" elementType="Header">
                  <stringProp name="Header.name">sec-fetch-dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
      <ProxyControl guiclass="ProxyControlGui" testclass="ProxyControl" testname="HTTP(S) Test Script Recorder">
        <stringProp name="ProxyControlGui.port">8086</stringProp>
        <collectionProp name="ProxyControlGui.exclude_list"/>
        <collectionProp name="ProxyControlGui.include_list"/>
        <boolProp name="ProxyControlGui.capture_http_headers">true</boolProp>
        <intProp name="ProxyControlGui.grouping_mode">0</intProp>
        <boolProp name="ProxyControlGui.add_assertion">false</boolProp>
        <stringProp name="ProxyControlGui.sampler_type_name"></stringProp>
        <boolProp name="ProxyControlGui.sampler_redirect_automatically">false</boolProp>
        <boolProp name="ProxyControlGui.sampler_follow_redirects">true</boolProp>
        <boolProp name="ProxyControlGui.use_keepalive">true</boolProp>
        <boolProp name="ProxyControlGui.detect_graphql_request">true</boolProp>
        <boolProp name="ProxyControlGui.sampler_download_images">false</boolProp>
        <intProp name="ProxyControlGui.proxy_http_sampler_naming_mode">0</intProp>
        <stringProp name="ProxyControlGui.default_encoding"></stringProp>
        <stringProp name="ProxyControlGui.proxy_prefix_http_sampler_name"></stringProp>
        <stringProp name="ProxyControlGui.proxy_pause_http_sampler"></stringProp>
        <boolProp name="ProxyControlGui.notify_child_sl_filtered">false</boolProp>
        <boolProp name="ProxyControlGui.regex_match">false</boolProp>
        <stringProp name="ProxyControlGui.content_type_include"></stringProp>
        <stringProp name="ProxyControlGui.content_type_exclude"></stringProp>
      </ProxyControl>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread GroupGem" enabled="false">
        <stringProp name="ThreadGroup.num_threads">${num_users}</stringProp>
        <intProp name="ThreadGroup.ramp_time">10</intProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller">
          <stringProp name="LoopController.loops">1</stringProp>
          <boolProp name="LoopController.continue_forever">false</boolProp>
        </elementProp>
      </ThreadGroup>
      <hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <stringProp name="LoopController.loops">3</stringProp>
        </LoopController>
        <hashTree/>
        <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="Aggregate Report" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Automatic Iterator" enabled="false">
        <intProp name="ThreadGroup.num_threads">3</intProp>
        <intProp name="ThreadGroup.ramp_time">60</intProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller">
          <stringProp name="LoopController.loops">1</stringProp>
          <boolProp name="LoopController.continue_forever">false</boolProp>
        </elementProp>
      </ThreadGroup>
      <hashTree>
        <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="Once Only Controller" enabled="true"/>
        <hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Simple Controller" enabled="true"/>
          <hashTree>
            <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
              <stringProp name="LoopController.loops">500</stringProp>
            </LoopController>
            <hashTree>
              <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="false">
                <stringProp name="filename">F:/apache-jmeter-5.6.3/apache-jmeter-5.6.3/bin/loop.csv</stringProp>
                <stringProp name="fileEncoding">UTF-8</stringProp>
                <stringProp name="variableNames">loop</stringProp>
                <boolProp name="ignoreFirstLine">false</boolProp>
                <stringProp name="delimiter">,</stringProp>
                <boolProp name="quotedData">false</boolProp>
                <boolProp name="recycle">true</boolProp>
                <boolProp name="stopThread">false</boolProp>
                <stringProp name="shareMode">shareMode.all</stringProp>
              </CSVDataSet>
              <hashTree/>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/v1/customers/login-226-${count}" enabled="true">
                <stringProp name="HTTPSampler.domain">bff-customer.interview-zero-stg.com</stringProp>
                <stringProp name="HTTPSampler.port">443</stringProp>
                <stringProp name="HTTPSampler.protocol">https</stringProp>
                <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                <stringProp name="HTTPSampler.path">/v1/customers/login</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&quot;username&quot;:&quot;${userId}&quot;,&quot;password&quot;:&quot;password&quot;,&quot;isSessionExist&quot;:true}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Sec-Fetch-Mode" elementType="Header">
                      <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                      <stringProp name="Header.value">cors</stringProp>
                    </elementProp>
                    <elementProp name="Referer" elementType="Header">
                      <stringProp name="Header.name">Referer</stringProp>
                      <stringProp name="Header.value">https://customer.interview-zero-stg.com/</stringProp>
                    </elementProp>
                    <elementProp name="Sec-Fetch-Site" elementType="Header">
                      <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                      <stringProp name="Header.value">same-site</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Language" elementType="Header">
                      <stringProp name="Header.name">Accept-Language</stringProp>
                      <stringProp name="Header.value">ja</stringProp>
                    </elementProp>
                    <elementProp name="Origin" elementType="Header">
                      <stringProp name="Header.name">Origin</stringProp>
                      <stringProp name="Header.value">https://customer.interview-zero-stg.com</stringProp>
                    </elementProp>
                    <elementProp name="Priority" elementType="Header">
                      <stringProp name="Header.name">Priority</stringProp>
                      <stringProp name="Header.value">u=0</stringProp>
                    </elementProp>
                    <elementProp name="Accept" elementType="Header">
                      <stringProp name="Header.name">Accept</stringProp>
                      <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                    </elementProp>
                    <elementProp name="Content-Type" elementType="Header">
                      <stringProp name="Header.name">Content-Type</stringProp>
                      <stringProp name="Header.value">application/json</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Encoding" elementType="Header">
                      <stringProp name="Header.name">Accept-Encoding</stringProp>
                      <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
                    </elementProp>
                    <elementProp name="User-Agent" elementType="Header">
                      <stringProp name="Header.name">User-Agent</stringProp>
                      <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:129.0) Gecko/20100101 Firefox/129.0</stringProp>
                    </elementProp>
                    <elementProp name="Sec-Fetch-Dest" elementType="Header">
                      <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                      <stringProp name="Header.value">empty</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
                <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
                  <stringProp name="filename">client_info.csv</stringProp>
                  <stringProp name="fileEncoding">UTF-8</stringProp>
                  <stringProp name="variableNames">userId</stringProp>
                  <boolProp name="ignoreFirstLine">true</boolProp>
                  <stringProp name="delimiter">,</stringProp>
                  <boolProp name="quotedData">false</boolProp>
                  <boolProp name="recycle">true</boolProp>
                  <boolProp name="stopThread">false</boolProp>
                  <stringProp name="shareMode">shareMode.all</stringProp>
                </CSVDataSet>
                <hashTree/>
                <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
                  <boolProp name="ResultCollector.error_logging">false</boolProp>
                  <objProp>
                    <name>saveConfig</name>
                    <value class="SampleSaveConfiguration">
                      <time>true</time>
                      <latency>true</latency>
                      <timestamp>true</timestamp>
                      <success>true</success>
                      <label>true</label>
                      <code>true</code>
                      <message>true</message>
                      <threadName>true</threadName>
                      <dataType>true</dataType>
                      <encoding>false</encoding>
                      <assertions>true</assertions>
                      <subresults>true</subresults>
                      <responseData>false</responseData>
                      <samplerData>false</samplerData>
                      <xml>false</xml>
                      <fieldNames>true</fieldNames>
                      <responseHeaders>false</responseHeaders>
                      <requestHeaders>false</requestHeaders>
                      <responseDataOnError>false</responseDataOnError>
                      <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                      <assertionsResultsToSave>0</assertionsResultsToSave>
                      <bytes>true</bytes>
                      <sentBytes>true</sentBytes>
                      <url>true</url>
                      <threadCounts>true</threadCounts>
                      <idleTime>true</idleTime>
                      <connectTime>true</connectTime>
                    </value>
                  </objProp>
                  <stringProp name="filename"></stringProp>
                </ResultCollector>
                <hashTree/>
              </hashTree>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="false">
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="script">int iteration = Integer.parseInt(vars.get(&quot;counter_value&quot;)); // Get current iteration
 
if (iteration == 1) {
    vars.put(&quot;THREAD_COUNT&quot;,&quot;50&quot;); // Set to 50 users
} else if (iteration == 2) {
    vars.put(&quot;THREAD_COUNT&quot;, vars.get(&quot;USER_COUNT_2&quot;)); // Set to 100 users
} else if (iteration == 3) {
    vars.put(&quot;THREAD_COUNT&quot;, vars.get(&quot;USER_COUNT_3&quot;)); // Set to 150 users
}</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
              <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="false">
                <boolProp name="ResultCollector.error_logging">false</boolProp>
                <objProp>
                  <name>saveConfig</name>
                  <value class="SampleSaveConfiguration">
                    <time>true</time>
                    <latency>true</latency>
                    <timestamp>true</timestamp>
                    <success>true</success>
                    <label>true</label>
                    <code>true</code>
                    <message>true</message>
                    <threadName>true</threadName>
                    <dataType>true</dataType>
                    <encoding>false</encoding>
                    <assertions>true</assertions>
                    <subresults>true</subresults>
                    <responseData>false</responseData>
                    <samplerData>false</samplerData>
                    <xml>false</xml>
                    <fieldNames>true</fieldNames>
                    <responseHeaders>false</responseHeaders>
                    <requestHeaders>false</requestHeaders>
                    <responseDataOnError>false</responseDataOnError>
                    <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                    <assertionsResultsToSave>0</assertionsResultsToSave>
                    <bytes>true</bytes>
                    <sentBytes>true</sentBytes>
                    <url>true</url>
                    <threadCounts>true</threadCounts>
                    <idleTime>true</idleTime>
                    <connectTime>true</connectTime>
                  </value>
                </objProp>
                <stringProp name="filename"></stringProp>
              </ResultCollector>
              <hashTree/>
              <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While Controller" enabled="true">
                <stringProp name="WhileController.condition"></stringProp>
              </WhileController>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="Aggregate Report" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
          <stringProp name="CounterConfig.start">1</stringProp>
          <stringProp name="CounterConfig.end">3</stringProp>
          <stringProp name="CounterConfig.incr">1</stringProp>
          <stringProp name="CounterConfig.name">count</stringProp>
          <stringProp name="CounterConfig.format"></stringProp>
          <boolProp name="CounterConfig.per_user">false</boolProp>
        </CounterConfig>
        <hashTree/>
      </hashTree>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
        <collectionProp name="Arguments.arguments">
          <elementProp name="num_users" elementType="Argument">
            <stringProp name="Argument.name">num_users</stringProp>
            <stringProp name="Argument.value">5</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="USER_COUNT_1" elementType="Argument">
            <stringProp name="Argument.name">USER_COUNT_1</stringProp>
            <stringProp name="Argument.value">5</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="USER_COUNT_2" elementType="Argument">
            <stringProp name="Argument.name">USER_COUNT_2</stringProp>
            <stringProp name="Argument.value">10</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="USER_COUNT_3" elementType="Argument">
            <stringProp name="Argument.name">USER_COUNT_3</stringProp>
            <stringProp name="Argument.value">15</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="NEW STAGING MONITOR LIST ADD">
        <intProp name="ThreadGroup.num_threads">64</intProp>
        <intProp name="ThreadGroup.ramp_time">34</intProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">false</boolProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller">
          <stringProp name="LoopController.loops">1</stringProp>
          <boolProp name="LoopController.continue_forever">false</boolProp>
        </elementProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="LOGIN STAGING" enabled="false">
          <stringProp name="HTTPSampler.domain">bff-monitor.interview-zero-dev.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">/v1/monitors/login</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;email&quot;:&quot;${email}&quot;,&quot;password&quot;:&quot;password&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">https://front-monitor.interview-zero-dev.com/</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-site</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">ja</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">https://front-monitor.interview-zero-dev.com</stringProp>
              </elementProp>
              <elementProp name="Priority" elementType="Header">
                <stringProp name="Header.name">Priority</stringProp>
                <stringProp name="Header.value">u=0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/${num_users}.0 (Windows NT ${USER_COUNT_2}.0; Win64; x64; rv:131.0) Gecko/20${USER_COUNT_2}0${USER_COUNT_2}1 Firefox/131.0</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config">
            <stringProp name="filename">F:/apache-jmeter-5.6.3/apache-jmeter-5.6.3/bin/401.csv</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="variableNames">email,id</stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">true</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
          </CSVDataSet>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor">
            <stringProp name="JSONPostProcessor.referenceNames">MToken</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..accessToken</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">0</stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">token = vars.get(&quot;MToken&quot;);
userID = vars.get(&quot;id&quot;);
f = new FileOutputStream(&quot;IZ_MonitorTokenNewDEV1.csv&quot;, true); //specify true if you want to overwrite file. Keep blank otherwise.
p = new PrintStream(f); 
this.interpreter.setOut(p); 
print(token +&quot;,&quot; + userID);
f.close();</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
          <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/v1/monitors/policy-agreement-3" enabled="false">
          <stringProp name="HTTPSampler.domain">bff-monitor.interview-zero-dev.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">/v1/monitors/policy-agreement</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;isUserServiceAgreementAccepted&quot;:true}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="sec-fetch-mode" elementType="Header">
                <stringProp name="Header.name">sec-fetch-mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="referer" elementType="Header">
                <stringProp name="Header.name">referer</stringProp>
                <stringProp name="Header.value">https://front-monitor.interview-zero-dev.com/</stringProp>
              </elementProp>
              <elementProp name="sec-fetch-site" elementType="Header">
                <stringProp name="Header.name">sec-fetch-site</stringProp>
                <stringProp name="Header.value">same-site</stringProp>
              </elementProp>
              <elementProp name="accept-language" elementType="Header">
                <stringProp name="Header.name">accept-language</stringProp>
                <stringProp name="Header.value">ja</stringProp>
              </elementProp>
              <elementProp name="tz" elementType="Header">
                <stringProp name="Header.name">tz</stringProp>
                <stringProp name="Header.value">Asia/Calcutta</stringProp>
              </elementProp>
              <elementProp name="Postman-Token" elementType="Header">
                <stringProp name="Header.name">Postman-Token</stringProp>
                <stringProp name="Header.value">cdae32e0-f7${num_users}0-43c7-9b6d-d4dd6c13${num_users}3e4</stringProp>
              </elementProp>
              <elementProp name="origin" elementType="Header">
                <stringProp name="Header.name">origin</stringProp>
                <stringProp name="Header.value">https://front-monitor.interview-zero-dev.com</stringProp>
              </elementProp>
              <elementProp name="priority" elementType="Header">
                <stringProp name="Header.name">priority</stringProp>
                <stringProp name="Header.value">u=1, i</stringProp>
              </elementProp>
              <elementProp name="pragma" elementType="Header">
                <stringProp name="Header.name">pragma</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="accept" elementType="Header">
                <stringProp name="Header.name">accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="authorization" elementType="Header">
                <stringProp name="Header.name">authorization</stringProp>
                <stringProp name="Header.value">Bearer ${tok}</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua</stringProp>
                <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;13${num_users}&quot;, &quot;Not-A.Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;13${num_users}&quot;</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-mobile" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                <stringProp name="Header.value">?0</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-platform" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
              </elementProp>
              <elementProp name="content-type" elementType="Header">
                <stringProp name="Header.name">content-type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="cache-control" elementType="Header">
                <stringProp name="Header.name">cache-control</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="user-agent" elementType="Header">
                <stringProp name="Header.name">user-agent</stringProp>
                <stringProp name="Header.value">Mozilla/${num_users}.0 (Windows NT ${USER_COUNT_2}.0; Win64; x64) AppleWebKit/${num_users}37.36 (KHTML, like Gecko) Chrome/13${num_users}.0.0.0 Safari/${num_users}37.36</stringProp>
              </elementProp>
              <elementProp name="sec-fetch-dest" elementType="Header">
                <stringProp name="Header.name">sec-fetch-dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config">
            <stringProp name="filename">F:/apache-jmeter-5.6.3/apache-jmeter-5.6.3/bin/IZ_MonitorTokenNewDEV1.csv</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="variableNames">tok</stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
          </CSVDataSet>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/v1/customers/login-226" enabled="false">
          <stringProp name="HTTPSampler.domain">bff-customer.interview-zero-dev.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/v1/customers/login</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;username&quot;:&quot;${userId}&quot;,&quot;password&quot;:&quot;password&quot;,&quot;isSessionExist&quot;:true}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">https://customer.interview-zero-stg.com/</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-site</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">ja</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">https://customer.interview-zero-stg.com</stringProp>
              </elementProp>
              <elementProp name="Priority" elementType="Header">
                <stringProp name="Header.name">Priority</stringProp>
                <stringProp name="Header.value">u=0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:129.0) Gecko/20100101 Firefox/129.0</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config">
            <stringProp name="filename">client_info2.csv</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="variableNames">userId</stringProp>
            <boolProp name="ignoreFirstLine">true</boolProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
          </CSVDataSet>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">authToken</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..accessToken</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">0</stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">token = vars.get(&quot;authToken&quot;);
userID = vars.get(&quot;userId&quot;);
f = new FileOutputStream(&quot;IZ_CustomerTokenNEW.csv&quot;, true); //specify true if you want to overwrite file. Keep blank otherwise.
p = new PrintStream(f); 
this.interpreter.setOut(p); 
print(token +&quot;,&quot; + userID);
f.close();</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/v1/customers/policy-agreement-4">
          <stringProp name="HTTPSampler.domain">bff-customer.interview-zero-dev.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">/v1/customers/policy-agreement</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;isUserServiceAgreementAccepted&quot;:true}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="sec-fetch-mode" elementType="Header">
                <stringProp name="Header.name">sec-fetch-mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="referer" elementType="Header">
                <stringProp name="Header.name">referer</stringProp>
                <stringProp name="Header.value">https://customer.interview-zero-stg.com/</stringProp>
              </elementProp>
              <elementProp name="sec-fetch-site" elementType="Header">
                <stringProp name="Header.name">sec-fetch-site</stringProp>
                <stringProp name="Header.value">same-site</stringProp>
              </elementProp>
              <elementProp name="accept-language" elementType="Header">
                <stringProp name="Header.name">accept-language</stringProp>
                <stringProp name="Header.value">ja</stringProp>
              </elementProp>
              <elementProp name="tz" elementType="Header">
                <stringProp name="Header.name">tz</stringProp>
                <stringProp name="Header.value">Asia/Calcutta</stringProp>
              </elementProp>
              <elementProp name="Postman-Token" elementType="Header">
                <stringProp name="Header.name">Postman-Token</stringProp>
                <stringProp name="Header.value">e${num_users}abe83f-b4${USER_COUNT_2}-4266-96d1-e${num_users}11${num_users}dd4e8${num_users}2</stringProp>
              </elementProp>
              <elementProp name="origin" elementType="Header">
                <stringProp name="Header.name">origin</stringProp>
                <stringProp name="Header.value">https://customer.interview-zero-stg.com</stringProp>
              </elementProp>
              <elementProp name="priority" elementType="Header">
                <stringProp name="Header.name">priority</stringProp>
                <stringProp name="Header.value">u=1, i</stringProp>
              </elementProp>
              <elementProp name="pragma" elementType="Header">
                <stringProp name="Header.name">pragma</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="accept" elementType="Header">
                <stringProp name="Header.name">accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="authorization" elementType="Header">
                <stringProp name="Header.name">authorization</stringProp>
                <stringProp name="Header.value">Bearer ${toke}</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua</stringProp>
                <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;13${num_users}&quot;, &quot;Not-A.Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;13${num_users}&quot;</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-mobile" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                <stringProp name="Header.value">?0</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-platform" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
              </elementProp>
              <elementProp name="content-type" elementType="Header">
                <stringProp name="Header.name">content-type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="cache-control" elementType="Header">
                <stringProp name="Header.name">cache-control</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="user-agent" elementType="Header">
                <stringProp name="Header.name">user-agent</stringProp>
                <stringProp name="Header.value">Mozilla/${num_users}.0 (Windows NT ${USER_COUNT_2}.0; Win64; x64) AppleWebKit/${num_users}37.36 (KHTML, like Gecko) Chrome/13${num_users}.0.0.0 Safari/${num_users}37.36</stringProp>
              </elementProp>
              <elementProp name="sec-fetch-dest" elementType="Header">
                <stringProp name="Header.name">sec-fetch-dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config">
            <stringProp name="filename">F:/apache-jmeter-5.6.3/apache-jmeter-5.6.3/bin/IZ_CustomerTokenNEW.csv</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="variableNames">toke</stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
          </CSVDataSet>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="400 Monitors" enabled="false">
        <intProp name="ThreadGroup.num_threads">400</intProp>
        <intProp name="ThreadGroup.ramp_time">30</intProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller">
          <stringProp name="LoopController.loops">1</stringProp>
          <boolProp name="LoopController.continue_forever">false</boolProp>
        </elementProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Apply STAGING" enabled="false">
          <stringProp name="HTTPSampler.domain">bff-monitor.interview-zero-stg.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/v1/monitors/campaigns/d0372acc5bbe47f9bf3029f76a749e92/apply</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;campaignId&quot;:&quot;d0372acc5bbe47f9bf3029f76a749e92&quot;,&quot;screeningId&quot;:&quot;dcb77d54d1f74edcba017e7c7f82b030&quot;,&quot;pageLoadedTime&quot;:&quot;2025-02-14 08:20:59.252220&quot;,&quot;question&quot;:[{&quot;questionId&quot;:&quot;1913647ccb9b40278e25c8560fa117f7&quot;,&quot;optionId&quot;:[&quot;aef8febbad7c4d9081ac522402a4deac&quot;]},{&quot;questionId&quot;:&quot;0f5473f86d534299a78f76d4f4357612&quot;,&quot;optionId&quot;:[&quot;c75b85b6f7914c7ab489a9d16d7817ae&quot;,&quot;45a026f1294f4c4390f628902533fd4b&quot;,&quot;1c91224d23d1463ab9e69685bef65afd&quot;]},{&quot;questionId&quot;:&quot;356840d4fcb74830ad0eb94c12343236&quot;,&quot;answer&quot;:&quot;test&quot;},{&quot;questionId&quot;:&quot;02d60b6a238e40c58deb20ffe5105ed2&quot;,&quot;optionId&quot;:[&quot;340136bb044a4f66be21cb2d63f7a644&quot;]},{&quot;questionId&quot;:&quot;39c3bc1c8fbd459080999f8a6ebe0c05&quot;,&quot;optionId&quot;:[&quot;9a5ff01a41684e729d5442076ee0e0f2&quot;]},{&quot;questionId&quot;:&quot;c895ba0d223144ecbd6f738bd6a3d732&quot;,&quot;answer&quot;:&quot;9&quot;},{&quot;questionId&quot;:&quot;26df9e907f884436bae3bdacce79890c&quot;,&quot;optionId&quot;:[&quot;5f9a512c2d884524b317613d7dd7066b&quot;]},{&quot;questionId&quot;:&quot;0c56338c57484bdeb67b1a33433209f9&quot;,&quot;optionId&quot;:[&quot;b69887d59e86448684b58680683d1a45&quot;,&quot;f51b7a9fdc7745f88ba4908df70700ef&quot;]},{&quot;questionId&quot;:&quot;4180b6cdc76a4898aff38c569ec8fbea&quot;,&quot;answer&quot;:&quot;78&quot;},{&quot;questionId&quot;:&quot;6f4dd96241a4448a97173dd6c9203fab&quot;,&quot;optionId&quot;:[&quot;dc7b4d539f694142b38bc06f26fd59d8&quot;]}],&quot;isRecruitmentAllowed&quot;:true,&quot;isRecordingAllowed&quot;:true,&quot;isConfidentialityAllowed&quot;:true}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
            <stringProp name="filename">F:/apache-jmeter-5.6.3/apache-jmeter-5.6.3/bin/IZ_MonitorToken4.csv</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="variableNames">Mtok,id</stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">false</boolProp>
            <boolProp name="stopThread">true</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
          </CSVDataSet>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">https://front-monitor.interview-zero-dev.com/</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-site</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">ja</stringProp>
              </elementProp>
              <elementProp name="tz" elementType="Header">
                <stringProp name="Header.name">tz</stringProp>
                <stringProp name="Header.value">Asia/Kolkata</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">https://front-monitor.interview-zero-dev.com</stringProp>
              </elementProp>
              <elementProp name="Priority" elementType="Header">
                <stringProp name="Header.name">Priority</stringProp>
                <stringProp name="Header.value">u=0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${Mtok}</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/${num_users}.0 (Windows NT ${USER_COUNT_2}.0; Win64; x64; rv:131.0) Gecko/20${USER_COUNT_2}0${USER_COUNT_2}1 Firefox/131.0</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Apply 400 Monitors-1" enabled="false">
          <stringProp name="HTTPSampler.domain">bff-monitor.interview-zero-dev.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/v1/monitors/campaigns/0f776ac4dcde4cc68bd98f8e6e401ffa/apply</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;campaignId&quot;:&quot;0f776ac4dcde4cc68bd98f8e6e401ffa&quot;,&quot;screeningId&quot;:&quot;&quot;,&quot;pageLoadedTime&quot;:&quot;2024-10-14 12:21:14.972449&quot;,&quot;question&quot;:[],&quot;isRecruitmentAllowed&quot;:true,&quot;isRecordingAllowed&quot;:true,&quot;isConfidentialityAllowed&quot;:true}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">https://front-monitor.interview-zero-dev.com/</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-site</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">ja</stringProp>
              </elementProp>
              <elementProp name="tz" elementType="Header">
                <stringProp name="Header.name">tz</stringProp>
                <stringProp name="Header.value">Asia/Kolkata</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">https://front-monitor.interview-zero-dev.com</stringProp>
              </elementProp>
              <elementProp name="Priority" elementType="Header">
                <stringProp name="Header.name">Priority</stringProp>
                <stringProp name="Header.value">u=0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${Mtok}</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/${num_users}.0 (Windows NT ${USER_COUNT_2}.0; Win64; x64; rv:131.0) Gecko/20${USER_COUNT_2}0${USER_COUNT_2}1 Firefox/131.0</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
            <stringProp name="filename">F:/apache-jmeter-5.6.3/apache-jmeter-5.6.3/bin/IZ_MonitorToken4.csv</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="variableNames">Mtok,id</stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">false</boolProp>
            <boolProp name="stopThread">true</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
          </CSVDataSet>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Apply 400 Monitors-2" enabled="true">
          <stringProp name="HTTPSampler.domain">bff-monitor.interview-zero-dev.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/v1/monitors/campaigns/8f7a32005c6948d3aeb812e72946c095/apply</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;campaignId&quot;:&quot;8f7a32005c6948d3aeb812e72946c095&quot;,&quot;screeningId&quot;:&quot;&quot;,&quot;pageLoadedTime&quot;:&quot;2025-03-27 11:55:18.814655&quot;,&quot;question&quot;:[],&quot;isRecruitmentAllowed&quot;:true,&quot;isRecordingAllowed&quot;:true,&quot;isConfidentialityAllowed&quot;:true}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">https://front-monitor.interview-zero-dev.com/</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-site</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">ja</stringProp>
              </elementProp>
              <elementProp name="tz" elementType="Header">
                <stringProp name="Header.name">tz</stringProp>
                <stringProp name="Header.value">Asia/Kolkata</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">https://front-monitor.interview-zero-dev.com</stringProp>
              </elementProp>
              <elementProp name="Priority" elementType="Header">
                <stringProp name="Header.name">Priority</stringProp>
                <stringProp name="Header.value">u=0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${Mtok}</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/${num_users}.0 (Windows NT ${USER_COUNT_2}.0; Win64; x64; rv:131.0) Gecko/20${USER_COUNT_2}0${USER_COUNT_2}1 Firefox/131.0</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
            <stringProp name="filename">F:/apache-jmeter-5.6.3/apache-jmeter-5.6.3/bin/IZ_MonitorToken4.csv</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="variableNames">Mtok,id</stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">false</boolProp>
            <boolProp name="stopThread">true</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
          </CSVDataSet>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="confirm 400 Monitors-stg" enabled="false">
          <stringProp name="HTTPSampler.domain">bff-monitor.interview-zero-stg.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">v1/monitors/campaigns/6415500b0c80401782afd1bdcbbc2c60/confirm</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;timeslotId&quot;:&quot;${time}&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">https://front-monitor.interview-zero-dev.com/</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-site</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">ja</stringProp>
              </elementProp>
              <elementProp name="tz" elementType="Header">
                <stringProp name="Header.name">tz</stringProp>
                <stringProp name="Header.value">Asia/Kolkata</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">https://front-monitor.interview-zero-dev.com</stringProp>
              </elementProp>
              <elementProp name="Priority" elementType="Header">
                <stringProp name="Header.name">Priority</stringProp>
                <stringProp name="Header.value">u=0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${Mtok}</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/${num_users}.0 (Windows NT ${USER_COUNT_2}.0; Win64; x64; rv:131.0) Gecko/20${USER_COUNT_2}0${USER_COUNT_2}1 Firefox/131.0</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
            <stringProp name="filename">F:/apache-jmeter-5.6.3/apache-jmeter-5.6.3/bin/IZ_MonitorToken4.csv</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="variableNames">Mtok,id</stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">false</boolProp>
            <boolProp name="stopThread">true</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
          </CSVDataSet>
          <hashTree/>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config2" enabled="true">
            <stringProp name="filename">F:/apache-jmeter-5.6.3/apache-jmeter-5.6.3/bin/id.csv</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="variableNames">time</stringProp>
            <boolProp name="ignoreFirstLine">true</boolProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
          </CSVDataSet>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="confirm 400 Monitors-dev" enabled="false">
          <stringProp name="HTTPSampler.domain">bff-monitor.interview-zero-dev.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">v1/monitors/campaigns/56dff61755ee4e49b67c03366a13e49c/confirm</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;timeslotId&quot;:&quot;${time}&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">https://front-monitor.interview-zero-dev.com/</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-site</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">ja</stringProp>
              </elementProp>
              <elementProp name="tz" elementType="Header">
                <stringProp name="Header.name">tz</stringProp>
                <stringProp name="Header.value">Asia/Kolkata</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">https://front-monitor.interview-zero-dev.com</stringProp>
              </elementProp>
              <elementProp name="Priority" elementType="Header">
                <stringProp name="Header.name">Priority</stringProp>
                <stringProp name="Header.value">u=0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${Mtok}</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/${num_users}.0 (Windows NT ${USER_COUNT_2}.0; Win64; x64; rv:131.0) Gecko/20${USER_COUNT_2}0${USER_COUNT_2}1 Firefox/131.0</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
            <stringProp name="filename">F:/apache-jmeter-5.6.3/apache-jmeter-5.6.3/bin/IZ_MonitorToken4.csv</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="variableNames">Mtok,id</stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">false</boolProp>
            <boolProp name="stopThread">true</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
          </CSVDataSet>
          <hashTree/>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config2" enabled="true">
            <stringProp name="filename">F:/apache-jmeter-5.6.3/apache-jmeter-5.6.3/bin/id.csv</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="variableNames">time</stringProp>
            <boolProp name="ignoreFirstLine">true</boolProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
          </CSVDataSet>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="LOGIN STAGING" enabled="false">
          <stringProp name="HTTPSampler.domain">bff-monitor.interview-zero-stg.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">/v1/monitors/login</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;email&quot;:&quot;${email}&quot;,&quot;password&quot;:&quot;password&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">https://front-monitor.interview-zero-dev.com/</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-site</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">ja</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">https://front-monitor.interview-zero-dev.com</stringProp>
              </elementProp>
              <elementProp name="Priority" elementType="Header">
                <stringProp name="Header.name">Priority</stringProp>
                <stringProp name="Header.value">u=0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/${num_users}.0 (Windows NT ${USER_COUNT_2}.0; Win64; x64; rv:131.0) Gecko/20${USER_COUNT_2}0${USER_COUNT_2}1 Firefox/131.0</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
            <stringProp name="filename">F:/apache-jmeter-5.6.3/apache-jmeter-5.6.3/bin/401.csv</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="variableNames">email,id</stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">true</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
          </CSVDataSet>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">MToken</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..accessToken</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">0</stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">token = vars.get(&quot;MToken&quot;);
userID = vars.get(&quot;id&quot;);
f = new FileOutputStream(&quot;IZ_MonitorToken4.csv&quot;, true); //specify true if you want to overwrite file. Keep blank otherwise.
p = new PrintStream(f); 
this.interpreter.setOut(p); 
print(token +&quot;,&quot; + userID);
f.close();</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
          <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/v1/monitors/login-228" enabled="false">
          <stringProp name="HTTPSampler.domain">bff-monitor.interview-zero-dev.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">/v1/monitors/login</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;email&quot;:&quot;${email}&quot;,&quot;password&quot;:&quot;password&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">https://front-monitor.interview-zero-dev.com/</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-site</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">ja</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">https://front-monitor.interview-zero-dev.com</stringProp>
              </elementProp>
              <elementProp name="Priority" elementType="Header">
                <stringProp name="Header.name">Priority</stringProp>
                <stringProp name="Header.value">u=0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/${num_users}.0 (Windows NT ${USER_COUNT_2}.0; Win64; x64; rv:131.0) Gecko/20${USER_COUNT_2}0${USER_COUNT_2}1 Firefox/131.0</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
            <stringProp name="filename">F:/apache-jmeter-5.6.3/apache-jmeter-5.6.3/bin/400.csv</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="variableNames">email,id</stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">true</boolProp>
            <boolProp name="recycle">true</boolProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
          </CSVDataSet>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">MToken</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..accessToken</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">0</stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">token = vars.get(&quot;MToken&quot;);
userID = vars.get(&quot;id&quot;);
f = new FileOutputStream(&quot;IZ_MonitorToken4.csv&quot;, true); //specify true if you want to overwrite file. Keep blank otherwise.
p = new PrintStream(f); 
this.interpreter.setOut(p); 
print(token +&quot;,&quot; + userID);
f.close();</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
          <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/v1/monitors/campaigns/6ae97c74c6ee4614909${num_users}c81bd6${num_users}2ecf4/apply-1" enabled="false">
          <stringProp name="HTTPSampler.domain">bff-monitor.interview-zero-dev.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">/v1/monitors/campaigns/4defa5fa351a4239a24fcd5a3d28fc4f/apply</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;campaignId&quot;:&quot;4defa5fa351a4239a24fcd5a3d28fc4f&quot;,&quot;screeningId&quot;:&quot;5d8f88c7f5e2488f8e9e16d3d22f59dc&quot;,&quot;pageLoadedTime&quot;:&quot;2024-12-10 04:57:20.709668&quot;,&quot;question&quot;:[{&quot;questionId&quot;:&quot;b46a7a6a6d544e4080a875b20a9b9417&quot;,&quot;optionId&quot;:[&quot;8ab2ab2ec7a14d23a26848f3545ad23c&quot;]},{&quot;questionId&quot;:&quot;1ee89c0c2ff64978b63c0f1411796e8b&quot;,&quot;optionId&quot;:[&quot;74676a27df164b6fad59b1ed1e4bb3a1&quot;,&quot;97885743c2b64668a38679f6d7c3706c&quot;,&quot;c70f98f16f344b229c9a3970ae6638f7&quot;,&quot;276c53d2af664d0b856562fdba3471fe&quot;,&quot;0a59a637a14a4a4493767c6bff472deb&quot;,&quot;0fd8181f427e4b39a9d93da56248cb82&quot;,&quot;1e3fd066ca25462ea8a0643f8b6c3b54&quot;]},{&quot;questionId&quot;:&quot;804650e2357a4633946060ba24869755&quot;,&quot;answer&quot;:&quot;ruit is yellow an&quot;},{&quot;questionId&quot;:&quot;d52587ff69364b0dbb1f9061b04ff8d6&quot;,&quot;optionId&quot;:[&quot;e4bd4db7c2ce4398bf10c10601a60738&quot;]},{&quot;questionId&quot;:&quot;a0d34b6550b747b79f7d8a0d8f0b006a&quot;,&quot;optionId&quot;:[&quot;08cb363774d7400388e1ead75b9e9715&quot;,&quot;8ccfbf59a92f426aa6ea45ed12b09831&quot;,&quot;f47b73f1cc4847cc8e0ca7b042fb1dd4&quot;]},{&quot;questionId&quot;:&quot;7b8545ce3ade417a9ca4b6506a5256c6&quot;,&quot;answer&quot;:&quot;Q6.How many colors are in a rainbow?*必須&quot;},{&quot;questionId&quot;:&quot;7b91c89c06264213806343ee6e437c8f&quot;,&quot;optionId&quot;:[&quot;2492a9989095406ba3428f1d45875269&quot;]},{&quot;questionId&quot;:&quot;94d3c7e91bf1461491fe7d94d53521a1&quot;,&quot;optionId&quot;:[&quot;b5c879e7090544e2b9d6f752226e808a&quot;,&quot;ef6dd1de666244c6a697c346a0915436&quot;,&quot;661f4f08d2534adbbf10cea42507a505&quot;]},{&quot;questionId&quot;:&quot;35171da0485e4fd2a12b455df58ea08e&quot;,&quot;answer&quot;:&quot;Q9.What season comes after winter&quot;},{&quot;questionId&quot;:&quot;94dd4eb7b7ec405b8761b2d39c7cd414&quot;,&quot;optionId&quot;:[&quot;bd7d01657874464290ceb6f5a99cb432&quot;]}],&quot;isRecruitmentAllowed&quot;:true,&quot;isRecordingAllowed&quot;:true,&quot;isConfidentialityAllowed&quot;:true}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">https://front-monitor.interview-zero-dev.com/</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-site</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">ja</stringProp>
              </elementProp>
              <elementProp name="tz" elementType="Header">
                <stringProp name="Header.name">tz</stringProp>
                <stringProp name="Header.value">Asia/Kolkata</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">https://front-monitor.interview-zero-dev.com</stringProp>
              </elementProp>
              <elementProp name="Priority" elementType="Header">
                <stringProp name="Header.name">Priority</stringProp>
                <stringProp name="Header.value">u=0</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ${Mtok}</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br, zstd</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/${num_users}.0 (Windows NT ${USER_COUNT_2}.0; Win64; x64; rv:131.0) Gecko/20${USER_COUNT_2}0${USER_COUNT_2}1 Firefox/131.0</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
            <stringProp name="filename">F:/apache-jmeter-5.6.3/apache-jmeter-5.6.3/bin/IZ_MonitorToken4.csv</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="variableNames">Mtok,id</stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
            <stringProp name="delimiter">,</stringProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">false</boolProp>
            <boolProp name="stopThread">true</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
          </CSVDataSet>
          <hashTree/>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <RecordingController guiclass="RecordController" testclass="RecordingController" testname="Recording Controller"/>
        <hashTree/>
      </hashTree>
      <ProxyControl guiclass="ProxyControlGui" testclass="ProxyControl" testname="HTTP(S) Test Script Recorder">
        <stringProp name="ProxyControlGui.port">8887</stringProp>
        <collectionProp name="ProxyControlGui.exclude_list"/>
        <collectionProp name="ProxyControlGui.include_list"/>
        <boolProp name="ProxyControlGui.capture_http_headers">true</boolProp>
        <intProp name="ProxyControlGui.grouping_mode">0</intProp>
        <boolProp name="ProxyControlGui.add_assertion">false</boolProp>
        <stringProp name="ProxyControlGui.sampler_type_name"></stringProp>
        <boolProp name="ProxyControlGui.sampler_redirect_automatically">false</boolProp>
        <boolProp name="ProxyControlGui.sampler_follow_redirects">true</boolProp>
        <boolProp name="ProxyControlGui.use_keepalive">true</boolProp>
        <boolProp name="ProxyControlGui.detect_graphql_request">true</boolProp>
        <boolProp name="ProxyControlGui.sampler_download_images">false</boolProp>
        <intProp name="ProxyControlGui.proxy_http_sampler_naming_mode">0</intProp>
        <stringProp name="ProxyControlGui.default_encoding"></stringProp>
        <stringProp name="ProxyControlGui.proxy_prefix_http_sampler_name"></stringProp>
        <stringProp name="ProxyControlGui.proxy_pause_http_sampler"></stringProp>
        <boolProp name="ProxyControlGui.notify_child_sl_filtered">false</boolProp>
        <boolProp name="ProxyControlGui.regex_match">false</boolProp>
        <stringProp name="ProxyControlGui.content_type_include"></stringProp>
        <stringProp name="ProxyControlGui.content_type_exclude"></stringProp>
      </ProxyControl>
      <hashTree/>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
